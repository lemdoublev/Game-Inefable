// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Files
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The list revisions result object</para>
    /// </summary>
    public class ListRevisionsResult
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<ListRevisionsResult> Encoder = new ListRevisionsResultEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<ListRevisionsResult> Decoder = new ListRevisionsResultDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="ListRevisionsResult" />
        /// class.</para>
        /// </summary>
        /// <param name="isDeleted">If the file identified by the latest revision in the
        /// response is either deleted or moved.</param>
        /// <param name="entries">The revisions for the file. Only revisions that are not
        /// deleted will show up here.</param>
        /// <param name="serverDeleted">The time of deletion if the file was deleted.</param>
        public ListRevisionsResult(bool isDeleted,
                                   col.IEnumerable<FileMetadata> entries,
                                   sys.DateTime? serverDeleted = null)
        {
            var entriesList = enc.Util.ToList(entries);

            if (entries == null)
            {
                throw new sys.ArgumentNullException("entries");
            }

            this.IsDeleted = isDeleted;
            this.Entries = entriesList;
            this.ServerDeleted = serverDeleted;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="ListRevisionsResult" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public ListRevisionsResult()
        {
        }

        /// <summary>
        /// <para>If the file identified by the latest revision in the response is either
        /// deleted or moved.</para>
        /// </summary>
        public bool IsDeleted { get; protected set; }

        /// <summary>
        /// <para>The revisions for the file. Only revisions that are not deleted will show up
        /// here.</para>
        /// </summary>
        public col.IList<FileMetadata> Entries { get; protected set; }

        /// <summary>
        /// <para>The time of deletion if the file was deleted.</para>
        /// </summary>
        public sys.DateTime? ServerDeleted { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="ListRevisionsResult" />.</para>
        /// </summary>
        private class ListRevisionsResultEncoder : enc.StructEncoder<ListRevisionsResult>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(ListRevisionsResult value, enc.IJsonWriter writer)
            {
                WriteProperty("is_deleted", value.IsDeleted, writer, enc.BooleanEncoder.Instance);
                WriteListProperty("entries", value.Entries, writer, global::Dropbox.Api.Files.FileMetadata.Encoder);
                if (value.ServerDeleted != null)
                {
                    WriteProperty("server_deleted", value.ServerDeleted.Value, writer, enc.DateTimeEncoder.Instance);
                }
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="ListRevisionsResult" />.</para>
        /// </summary>
        private class ListRevisionsResultDecoder : enc.StructDecoder<ListRevisionsResult>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="ListRevisionsResult" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override ListRevisionsResult Create()
            {
                return new ListRevisionsResult();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(ListRevisionsResult value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "is_deleted":
                        value.IsDeleted = enc.BooleanDecoder.Instance.Decode(reader);
                        break;
                    case "entries":
                        value.Entries = ReadList<FileMetadata>(reader, global::Dropbox.Api.Files.FileMetadata.Decoder);
                        break;
                    case "server_deleted":
                        value.ServerDeleted = enc.DateTimeDecoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}

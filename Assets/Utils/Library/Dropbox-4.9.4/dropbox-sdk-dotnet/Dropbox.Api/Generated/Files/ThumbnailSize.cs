// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Files
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The thumbnail size object</para>
    /// </summary>
    public class ThumbnailSize
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<ThumbnailSize> Encoder = new ThumbnailSizeEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<ThumbnailSize> Decoder = new ThumbnailSizeDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="ThumbnailSize" /> class.</para>
        /// </summary>
        public ThumbnailSize()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is W32h32</para>
        /// </summary>
        public bool IsW32h32
        {
            get
            {
                return this is W32h32;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a W32h32, or <c>null</c>.</para>
        /// </summary>
        public W32h32 AsW32h32
        {
            get
            {
                return this as W32h32;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is W64h64</para>
        /// </summary>
        public bool IsW64h64
        {
            get
            {
                return this is W64h64;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a W64h64, or <c>null</c>.</para>
        /// </summary>
        public W64h64 AsW64h64
        {
            get
            {
                return this as W64h64;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is W128h128</para>
        /// </summary>
        public bool IsW128h128
        {
            get
            {
                return this is W128h128;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a W128h128, or <c>null</c>.</para>
        /// </summary>
        public W128h128 AsW128h128
        {
            get
            {
                return this as W128h128;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is W256h256</para>
        /// </summary>
        public bool IsW256h256
        {
            get
            {
                return this is W256h256;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a W256h256, or <c>null</c>.</para>
        /// </summary>
        public W256h256 AsW256h256
        {
            get
            {
                return this as W256h256;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is W480h320</para>
        /// </summary>
        public bool IsW480h320
        {
            get
            {
                return this is W480h320;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a W480h320, or <c>null</c>.</para>
        /// </summary>
        public W480h320 AsW480h320
        {
            get
            {
                return this as W480h320;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is W640h480</para>
        /// </summary>
        public bool IsW640h480
        {
            get
            {
                return this is W640h480;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a W640h480, or <c>null</c>.</para>
        /// </summary>
        public W640h480 AsW640h480
        {
            get
            {
                return this as W640h480;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is W960h640</para>
        /// </summary>
        public bool IsW960h640
        {
            get
            {
                return this is W960h640;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a W960h640, or <c>null</c>.</para>
        /// </summary>
        public W960h640 AsW960h640
        {
            get
            {
                return this as W960h640;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is W1024h768</para>
        /// </summary>
        public bool IsW1024h768
        {
            get
            {
                return this is W1024h768;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a W1024h768, or <c>null</c>.</para>
        /// </summary>
        public W1024h768 AsW1024h768
        {
            get
            {
                return this as W1024h768;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is W2048h1536</para>
        /// </summary>
        public bool IsW2048h1536
        {
            get
            {
                return this is W2048h1536;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a W2048h1536, or <c>null</c>.</para>
        /// </summary>
        public W2048h1536 AsW2048h1536
        {
            get
            {
                return this as W2048h1536;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="ThumbnailSize" />.</para>
        /// </summary>
        private class ThumbnailSizeEncoder : enc.StructEncoder<ThumbnailSize>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(ThumbnailSize value, enc.IJsonWriter writer)
            {
                if (value is W32h32)
                {
                    WriteProperty(".tag", "w32h32", writer, enc.StringEncoder.Instance);
                    W32h32.Encoder.EncodeFields((W32h32)value, writer);
                    return;
                }
                if (value is W64h64)
                {
                    WriteProperty(".tag", "w64h64", writer, enc.StringEncoder.Instance);
                    W64h64.Encoder.EncodeFields((W64h64)value, writer);
                    return;
                }
                if (value is W128h128)
                {
                    WriteProperty(".tag", "w128h128", writer, enc.StringEncoder.Instance);
                    W128h128.Encoder.EncodeFields((W128h128)value, writer);
                    return;
                }
                if (value is W256h256)
                {
                    WriteProperty(".tag", "w256h256", writer, enc.StringEncoder.Instance);
                    W256h256.Encoder.EncodeFields((W256h256)value, writer);
                    return;
                }
                if (value is W480h320)
                {
                    WriteProperty(".tag", "w480h320", writer, enc.StringEncoder.Instance);
                    W480h320.Encoder.EncodeFields((W480h320)value, writer);
                    return;
                }
                if (value is W640h480)
                {
                    WriteProperty(".tag", "w640h480", writer, enc.StringEncoder.Instance);
                    W640h480.Encoder.EncodeFields((W640h480)value, writer);
                    return;
                }
                if (value is W960h640)
                {
                    WriteProperty(".tag", "w960h640", writer, enc.StringEncoder.Instance);
                    W960h640.Encoder.EncodeFields((W960h640)value, writer);
                    return;
                }
                if (value is W1024h768)
                {
                    WriteProperty(".tag", "w1024h768", writer, enc.StringEncoder.Instance);
                    W1024h768.Encoder.EncodeFields((W1024h768)value, writer);
                    return;
                }
                if (value is W2048h1536)
                {
                    WriteProperty(".tag", "w2048h1536", writer, enc.StringEncoder.Instance);
                    W2048h1536.Encoder.EncodeFields((W2048h1536)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="ThumbnailSize" />.</para>
        /// </summary>
        private class ThumbnailSizeDecoder : enc.UnionDecoder<ThumbnailSize>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="ThumbnailSize" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override ThumbnailSize Create()
            {
                return new ThumbnailSize();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override ThumbnailSize Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "w32h32":
                        return W32h32.Decoder.DecodeFields(reader);
                    case "w64h64":
                        return W64h64.Decoder.DecodeFields(reader);
                    case "w128h128":
                        return W128h128.Decoder.DecodeFields(reader);
                    case "w256h256":
                        return W256h256.Decoder.DecodeFields(reader);
                    case "w480h320":
                        return W480h320.Decoder.DecodeFields(reader);
                    case "w640h480":
                        return W640h480.Decoder.DecodeFields(reader);
                    case "w960h640":
                        return W960h640.Decoder.DecodeFields(reader);
                    case "w1024h768":
                        return W1024h768.Decoder.DecodeFields(reader);
                    case "w2048h1536":
                        return W2048h1536.Decoder.DecodeFields(reader);
                    default:
                        throw new sys.InvalidOperationException();
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>32 by 32 px.</para>
        /// </summary>
        public sealed class W32h32 : ThumbnailSize
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<W32h32> Encoder = new W32h32Encoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<W32h32> Decoder = new W32h32Decoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="W32h32" /> class.</para>
            /// </summary>
            private W32h32()
            {
            }

            /// <summary>
            /// <para>A singleton instance of W32h32</para>
            /// </summary>
            public static readonly W32h32 Instance = new W32h32();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="W32h32" />.</para>
            /// </summary>
            private class W32h32Encoder : enc.StructEncoder<W32h32>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(W32h32 value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="W32h32" />.</para>
            /// </summary>
            private class W32h32Decoder : enc.StructDecoder<W32h32>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="W32h32" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override W32h32 Create()
                {
                    return W32h32.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>64 by 64 px.</para>
        /// </summary>
        public sealed class W64h64 : ThumbnailSize
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<W64h64> Encoder = new W64h64Encoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<W64h64> Decoder = new W64h64Decoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="W64h64" /> class.</para>
            /// </summary>
            private W64h64()
            {
            }

            /// <summary>
            /// <para>A singleton instance of W64h64</para>
            /// </summary>
            public static readonly W64h64 Instance = new W64h64();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="W64h64" />.</para>
            /// </summary>
            private class W64h64Encoder : enc.StructEncoder<W64h64>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(W64h64 value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="W64h64" />.</para>
            /// </summary>
            private class W64h64Decoder : enc.StructDecoder<W64h64>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="W64h64" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override W64h64 Create()
                {
                    return W64h64.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>128 by 128 px.</para>
        /// </summary>
        public sealed class W128h128 : ThumbnailSize
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<W128h128> Encoder = new W128h128Encoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<W128h128> Decoder = new W128h128Decoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="W128h128" /> class.</para>
            /// </summary>
            private W128h128()
            {
            }

            /// <summary>
            /// <para>A singleton instance of W128h128</para>
            /// </summary>
            public static readonly W128h128 Instance = new W128h128();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="W128h128" />.</para>
            /// </summary>
            private class W128h128Encoder : enc.StructEncoder<W128h128>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(W128h128 value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="W128h128" />.</para>
            /// </summary>
            private class W128h128Decoder : enc.StructDecoder<W128h128>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="W128h128" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override W128h128 Create()
                {
                    return W128h128.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>256 by 256 px.</para>
        /// </summary>
        public sealed class W256h256 : ThumbnailSize
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<W256h256> Encoder = new W256h256Encoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<W256h256> Decoder = new W256h256Decoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="W256h256" /> class.</para>
            /// </summary>
            private W256h256()
            {
            }

            /// <summary>
            /// <para>A singleton instance of W256h256</para>
            /// </summary>
            public static readonly W256h256 Instance = new W256h256();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="W256h256" />.</para>
            /// </summary>
            private class W256h256Encoder : enc.StructEncoder<W256h256>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(W256h256 value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="W256h256" />.</para>
            /// </summary>
            private class W256h256Decoder : enc.StructDecoder<W256h256>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="W256h256" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override W256h256 Create()
                {
                    return W256h256.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>480 by 320 px.</para>
        /// </summary>
        public sealed class W480h320 : ThumbnailSize
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<W480h320> Encoder = new W480h320Encoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<W480h320> Decoder = new W480h320Decoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="W480h320" /> class.</para>
            /// </summary>
            private W480h320()
            {
            }

            /// <summary>
            /// <para>A singleton instance of W480h320</para>
            /// </summary>
            public static readonly W480h320 Instance = new W480h320();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="W480h320" />.</para>
            /// </summary>
            private class W480h320Encoder : enc.StructEncoder<W480h320>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(W480h320 value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="W480h320" />.</para>
            /// </summary>
            private class W480h320Decoder : enc.StructDecoder<W480h320>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="W480h320" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override W480h320 Create()
                {
                    return W480h320.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>640 by 480 px.</para>
        /// </summary>
        public sealed class W640h480 : ThumbnailSize
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<W640h480> Encoder = new W640h480Encoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<W640h480> Decoder = new W640h480Decoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="W640h480" /> class.</para>
            /// </summary>
            private W640h480()
            {
            }

            /// <summary>
            /// <para>A singleton instance of W640h480</para>
            /// </summary>
            public static readonly W640h480 Instance = new W640h480();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="W640h480" />.</para>
            /// </summary>
            private class W640h480Encoder : enc.StructEncoder<W640h480>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(W640h480 value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="W640h480" />.</para>
            /// </summary>
            private class W640h480Decoder : enc.StructDecoder<W640h480>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="W640h480" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override W640h480 Create()
                {
                    return W640h480.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>960 by 640 px.</para>
        /// </summary>
        public sealed class W960h640 : ThumbnailSize
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<W960h640> Encoder = new W960h640Encoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<W960h640> Decoder = new W960h640Decoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="W960h640" /> class.</para>
            /// </summary>
            private W960h640()
            {
            }

            /// <summary>
            /// <para>A singleton instance of W960h640</para>
            /// </summary>
            public static readonly W960h640 Instance = new W960h640();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="W960h640" />.</para>
            /// </summary>
            private class W960h640Encoder : enc.StructEncoder<W960h640>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(W960h640 value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="W960h640" />.</para>
            /// </summary>
            private class W960h640Decoder : enc.StructDecoder<W960h640>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="W960h640" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override W960h640 Create()
                {
                    return W960h640.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>1024 by 768 px.</para>
        /// </summary>
        public sealed class W1024h768 : ThumbnailSize
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<W1024h768> Encoder = new W1024h768Encoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<W1024h768> Decoder = new W1024h768Decoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="W1024h768" /> class.</para>
            /// </summary>
            private W1024h768()
            {
            }

            /// <summary>
            /// <para>A singleton instance of W1024h768</para>
            /// </summary>
            public static readonly W1024h768 Instance = new W1024h768();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="W1024h768" />.</para>
            /// </summary>
            private class W1024h768Encoder : enc.StructEncoder<W1024h768>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(W1024h768 value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="W1024h768" />.</para>
            /// </summary>
            private class W1024h768Decoder : enc.StructDecoder<W1024h768>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="W1024h768" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override W1024h768 Create()
                {
                    return W1024h768.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>2048 by 1536 px.</para>
        /// </summary>
        public sealed class W2048h1536 : ThumbnailSize
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<W2048h1536> Encoder = new W2048h1536Encoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<W2048h1536> Decoder = new W2048h1536Decoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="W2048h1536" /> class.</para>
            /// </summary>
            private W2048h1536()
            {
            }

            /// <summary>
            /// <para>A singleton instance of W2048h1536</para>
            /// </summary>
            public static readonly W2048h1536 Instance = new W2048h1536();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="W2048h1536" />.</para>
            /// </summary>
            private class W2048h1536Encoder : enc.StructEncoder<W2048h1536>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(W2048h1536 value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="W2048h1536" />.</para>
            /// </summary>
            private class W2048h1536Decoder : enc.StructDecoder<W2048h1536>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="W2048h1536" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override W2048h1536 Create()
                {
                    return W2048h1536.Instance;
                }

            }

            #endregion
        }
    }
}

// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Paper
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The subscription level of a Paper folder.</para>
    /// </summary>
    public class FolderSubscriptionLevel
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<FolderSubscriptionLevel> Encoder = new FolderSubscriptionLevelEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<FolderSubscriptionLevel> Decoder = new FolderSubscriptionLevelDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="FolderSubscriptionLevel" />
        /// class.</para>
        /// </summary>
        public FolderSubscriptionLevel()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is None</para>
        /// </summary>
        public bool IsNone
        {
            get
            {
                return this is None;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a None, or <c>null</c>.</para>
        /// </summary>
        public None AsNone
        {
            get
            {
                return this as None;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is ActivityOnly</para>
        /// </summary>
        public bool IsActivityOnly
        {
            get
            {
                return this is ActivityOnly;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a ActivityOnly, or <c>null</c>.</para>
        /// </summary>
        public ActivityOnly AsActivityOnly
        {
            get
            {
                return this as ActivityOnly;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is DailyEmails</para>
        /// </summary>
        public bool IsDailyEmails
        {
            get
            {
                return this is DailyEmails;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a DailyEmails, or <c>null</c>.</para>
        /// </summary>
        public DailyEmails AsDailyEmails
        {
            get
            {
                return this as DailyEmails;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is WeeklyEmails</para>
        /// </summary>
        public bool IsWeeklyEmails
        {
            get
            {
                return this is WeeklyEmails;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a WeeklyEmails, or <c>null</c>.</para>
        /// </summary>
        public WeeklyEmails AsWeeklyEmails
        {
            get
            {
                return this as WeeklyEmails;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="FolderSubscriptionLevel" />.</para>
        /// </summary>
        private class FolderSubscriptionLevelEncoder : enc.StructEncoder<FolderSubscriptionLevel>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(FolderSubscriptionLevel value, enc.IJsonWriter writer)
            {
                if (value is None)
                {
                    WriteProperty(".tag", "none", writer, enc.StringEncoder.Instance);
                    None.Encoder.EncodeFields((None)value, writer);
                    return;
                }
                if (value is ActivityOnly)
                {
                    WriteProperty(".tag", "activity_only", writer, enc.StringEncoder.Instance);
                    ActivityOnly.Encoder.EncodeFields((ActivityOnly)value, writer);
                    return;
                }
                if (value is DailyEmails)
                {
                    WriteProperty(".tag", "daily_emails", writer, enc.StringEncoder.Instance);
                    DailyEmails.Encoder.EncodeFields((DailyEmails)value, writer);
                    return;
                }
                if (value is WeeklyEmails)
                {
                    WriteProperty(".tag", "weekly_emails", writer, enc.StringEncoder.Instance);
                    WeeklyEmails.Encoder.EncodeFields((WeeklyEmails)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="FolderSubscriptionLevel" />.</para>
        /// </summary>
        private class FolderSubscriptionLevelDecoder : enc.UnionDecoder<FolderSubscriptionLevel>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="FolderSubscriptionLevel"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override FolderSubscriptionLevel Create()
            {
                return new FolderSubscriptionLevel();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override FolderSubscriptionLevel Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "none":
                        return None.Decoder.DecodeFields(reader);
                    case "activity_only":
                        return ActivityOnly.Decoder.DecodeFields(reader);
                    case "daily_emails":
                        return DailyEmails.Decoder.DecodeFields(reader);
                    case "weekly_emails":
                        return WeeklyEmails.Decoder.DecodeFields(reader);
                    default:
                        throw new sys.InvalidOperationException();
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>Not shown in activity, no email messages.</para>
        /// </summary>
        public sealed class None : FolderSubscriptionLevel
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<None> Encoder = new NoneEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<None> Decoder = new NoneDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="None" /> class.</para>
            /// </summary>
            private None()
            {
            }

            /// <summary>
            /// <para>A singleton instance of None</para>
            /// </summary>
            public static readonly None Instance = new None();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="None" />.</para>
            /// </summary>
            private class NoneEncoder : enc.StructEncoder<None>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(None value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="None" />.</para>
            /// </summary>
            private class NoneDecoder : enc.StructDecoder<None>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="None" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override None Create()
                {
                    return None.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Shown in activity, no email messages.</para>
        /// </summary>
        public sealed class ActivityOnly : FolderSubscriptionLevel
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<ActivityOnly> Encoder = new ActivityOnlyEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<ActivityOnly> Decoder = new ActivityOnlyDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="ActivityOnly" />
            /// class.</para>
            /// </summary>
            private ActivityOnly()
            {
            }

            /// <summary>
            /// <para>A singleton instance of ActivityOnly</para>
            /// </summary>
            public static readonly ActivityOnly Instance = new ActivityOnly();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="ActivityOnly" />.</para>
            /// </summary>
            private class ActivityOnlyEncoder : enc.StructEncoder<ActivityOnly>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(ActivityOnly value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="ActivityOnly" />.</para>
            /// </summary>
            private class ActivityOnlyDecoder : enc.StructDecoder<ActivityOnly>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="ActivityOnly" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override ActivityOnly Create()
                {
                    return ActivityOnly.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Shown in activity, daily email messages.</para>
        /// </summary>
        public sealed class DailyEmails : FolderSubscriptionLevel
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<DailyEmails> Encoder = new DailyEmailsEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<DailyEmails> Decoder = new DailyEmailsDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="DailyEmails" />
            /// class.</para>
            /// </summary>
            private DailyEmails()
            {
            }

            /// <summary>
            /// <para>A singleton instance of DailyEmails</para>
            /// </summary>
            public static readonly DailyEmails Instance = new DailyEmails();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="DailyEmails" />.</para>
            /// </summary>
            private class DailyEmailsEncoder : enc.StructEncoder<DailyEmails>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(DailyEmails value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="DailyEmails" />.</para>
            /// </summary>
            private class DailyEmailsDecoder : enc.StructDecoder<DailyEmails>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="DailyEmails" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override DailyEmails Create()
                {
                    return DailyEmails.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Shown in activity, weekly email messages.</para>
        /// </summary>
        public sealed class WeeklyEmails : FolderSubscriptionLevel
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<WeeklyEmails> Encoder = new WeeklyEmailsEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<WeeklyEmails> Decoder = new WeeklyEmailsDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="WeeklyEmails" />
            /// class.</para>
            /// </summary>
            private WeeklyEmails()
            {
            }

            /// <summary>
            /// <para>A singleton instance of WeeklyEmails</para>
            /// </summary>
            public static readonly WeeklyEmails Instance = new WeeklyEmails();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="WeeklyEmails" />.</para>
            /// </summary>
            private class WeeklyEmailsEncoder : enc.StructEncoder<WeeklyEmails>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(WeeklyEmails value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="WeeklyEmails" />.</para>
            /// </summary>
            private class WeeklyEmailsDecoder : enc.StructDecoder<WeeklyEmails>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="WeeklyEmails" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override WeeklyEmails Create()
                {
                    return WeeklyEmails.Instance;
                }

            }

            #endregion
        }
    }
}

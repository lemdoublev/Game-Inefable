// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Paper
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The list users on folder response object</para>
    /// </summary>
    public class ListUsersOnFolderResponse
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<ListUsersOnFolderResponse> Encoder = new ListUsersOnFolderResponseEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<ListUsersOnFolderResponse> Decoder = new ListUsersOnFolderResponseDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="ListUsersOnFolderResponse" />
        /// class.</para>
        /// </summary>
        /// <param name="invitees">List of email addresses that are invited on the Paper
        /// folder.</param>
        /// <param name="users">List of users that are invited on the Paper folder.</param>
        /// <param name="cursor">Pass the cursor into <see
        /// cref="Dropbox.Api.Paper.Routes.PaperUserRoutes.DocsFolderUsersListContinueAsync" />
        /// to paginate through all users. The cursor preserves all properties as specified in
        /// the original call to <see
        /// cref="Dropbox.Api.Paper.Routes.PaperUserRoutes.DocsFolderUsersListAsync"
        /// />.</param>
        /// <param name="hasMore">Will be set to True if a subsequent call with the provided
        /// cursor to <see
        /// cref="Dropbox.Api.Paper.Routes.PaperUserRoutes.DocsFolderUsersListContinueAsync" />
        /// returns immediately with some results. If set to False please allow some delay
        /// before making another call to <see
        /// cref="Dropbox.Api.Paper.Routes.PaperUserRoutes.DocsFolderUsersListContinueAsync"
        /// />.</param>
        public ListUsersOnFolderResponse(col.IEnumerable<global::Dropbox.Api.Sharing.InviteeInfo> invitees,
                                         col.IEnumerable<global::Dropbox.Api.Sharing.UserInfo> users,
                                         Cursor cursor,
                                         bool hasMore)
        {
            var inviteesList = enc.Util.ToList(invitees);

            if (invitees == null)
            {
                throw new sys.ArgumentNullException("invitees");
            }

            var usersList = enc.Util.ToList(users);

            if (users == null)
            {
                throw new sys.ArgumentNullException("users");
            }

            if (cursor == null)
            {
                throw new sys.ArgumentNullException("cursor");
            }

            this.Invitees = inviteesList;
            this.Users = usersList;
            this.Cursor = cursor;
            this.HasMore = hasMore;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="ListUsersOnFolderResponse" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public ListUsersOnFolderResponse()
        {
        }

        /// <summary>
        /// <para>List of email addresses that are invited on the Paper folder.</para>
        /// </summary>
        public col.IList<global::Dropbox.Api.Sharing.InviteeInfo> Invitees { get; protected set; }

        /// <summary>
        /// <para>List of users that are invited on the Paper folder.</para>
        /// </summary>
        public col.IList<global::Dropbox.Api.Sharing.UserInfo> Users { get; protected set; }

        /// <summary>
        /// <para>Pass the cursor into <see
        /// cref="Dropbox.Api.Paper.Routes.PaperUserRoutes.DocsFolderUsersListContinueAsync" />
        /// to paginate through all users. The cursor preserves all properties as specified in
        /// the original call to <see
        /// cref="Dropbox.Api.Paper.Routes.PaperUserRoutes.DocsFolderUsersListAsync" />.</para>
        /// </summary>
        public Cursor Cursor { get; protected set; }

        /// <summary>
        /// <para>Will be set to True if a subsequent call with the provided cursor to <see
        /// cref="Dropbox.Api.Paper.Routes.PaperUserRoutes.DocsFolderUsersListContinueAsync" />
        /// returns immediately with some results. If set to False please allow some delay
        /// before making another call to <see
        /// cref="Dropbox.Api.Paper.Routes.PaperUserRoutes.DocsFolderUsersListContinueAsync"
        /// />.</para>
        /// </summary>
        public bool HasMore { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="ListUsersOnFolderResponse" />.</para>
        /// </summary>
        private class ListUsersOnFolderResponseEncoder : enc.StructEncoder<ListUsersOnFolderResponse>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(ListUsersOnFolderResponse value, enc.IJsonWriter writer)
            {
                WriteListProperty("invitees", value.Invitees, writer, global::Dropbox.Api.Sharing.InviteeInfo.Encoder);
                WriteListProperty("users", value.Users, writer, global::Dropbox.Api.Sharing.UserInfo.Encoder);
                WriteProperty("cursor", value.Cursor, writer, global::Dropbox.Api.Paper.Cursor.Encoder);
                WriteProperty("has_more", value.HasMore, writer, enc.BooleanEncoder.Instance);
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="ListUsersOnFolderResponse" />.</para>
        /// </summary>
        private class ListUsersOnFolderResponseDecoder : enc.StructDecoder<ListUsersOnFolderResponse>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="ListUsersOnFolderResponse"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override ListUsersOnFolderResponse Create()
            {
                return new ListUsersOnFolderResponse();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(ListUsersOnFolderResponse value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "invitees":
                        value.Invitees = ReadList<global::Dropbox.Api.Sharing.InviteeInfo>(reader, global::Dropbox.Api.Sharing.InviteeInfo.Decoder);
                        break;
                    case "users":
                        value.Users = ReadList<global::Dropbox.Api.Sharing.UserInfo>(reader, global::Dropbox.Api.Sharing.UserInfo.Decoder);
                        break;
                    case "cursor":
                        value.Cursor = global::Dropbox.Api.Paper.Cursor.Decoder.Decode(reader);
                        break;
                    case "has_more":
                        value.HasMore = enc.BooleanDecoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}

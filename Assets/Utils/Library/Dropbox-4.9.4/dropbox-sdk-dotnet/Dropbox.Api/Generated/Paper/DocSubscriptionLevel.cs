// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Paper
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The subscription level of a Paper doc.</para>
    /// </summary>
    public class DocSubscriptionLevel
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<DocSubscriptionLevel> Encoder = new DocSubscriptionLevelEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<DocSubscriptionLevel> Decoder = new DocSubscriptionLevelDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="DocSubscriptionLevel" />
        /// class.</para>
        /// </summary>
        public DocSubscriptionLevel()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Default</para>
        /// </summary>
        public bool IsDefault
        {
            get
            {
                return this is Default;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Default, or <c>null</c>.</para>
        /// </summary>
        public Default AsDefault
        {
            get
            {
                return this as Default;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Ignore</para>
        /// </summary>
        public bool IsIgnore
        {
            get
            {
                return this is Ignore;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Ignore, or <c>null</c>.</para>
        /// </summary>
        public Ignore AsIgnore
        {
            get
            {
                return this as Ignore;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Every</para>
        /// </summary>
        public bool IsEvery
        {
            get
            {
                return this is Every;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Every, or <c>null</c>.</para>
        /// </summary>
        public Every AsEvery
        {
            get
            {
                return this as Every;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is NoEmail</para>
        /// </summary>
        public bool IsNoEmail
        {
            get
            {
                return this is NoEmail;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a NoEmail, or <c>null</c>.</para>
        /// </summary>
        public NoEmail AsNoEmail
        {
            get
            {
                return this as NoEmail;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="DocSubscriptionLevel" />.</para>
        /// </summary>
        private class DocSubscriptionLevelEncoder : enc.StructEncoder<DocSubscriptionLevel>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(DocSubscriptionLevel value, enc.IJsonWriter writer)
            {
                if (value is Default)
                {
                    WriteProperty(".tag", "default", writer, enc.StringEncoder.Instance);
                    Default.Encoder.EncodeFields((Default)value, writer);
                    return;
                }
                if (value is Ignore)
                {
                    WriteProperty(".tag", "ignore", writer, enc.StringEncoder.Instance);
                    Ignore.Encoder.EncodeFields((Ignore)value, writer);
                    return;
                }
                if (value is Every)
                {
                    WriteProperty(".tag", "every", writer, enc.StringEncoder.Instance);
                    Every.Encoder.EncodeFields((Every)value, writer);
                    return;
                }
                if (value is NoEmail)
                {
                    WriteProperty(".tag", "no_email", writer, enc.StringEncoder.Instance);
                    NoEmail.Encoder.EncodeFields((NoEmail)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="DocSubscriptionLevel" />.</para>
        /// </summary>
        private class DocSubscriptionLevelDecoder : enc.UnionDecoder<DocSubscriptionLevel>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="DocSubscriptionLevel" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override DocSubscriptionLevel Create()
            {
                return new DocSubscriptionLevel();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override DocSubscriptionLevel Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "default":
                        return Default.Decoder.DecodeFields(reader);
                    case "ignore":
                        return Ignore.Decoder.DecodeFields(reader);
                    case "every":
                        return Every.Decoder.DecodeFields(reader);
                    case "no_email":
                        return NoEmail.Decoder.DecodeFields(reader);
                    default:
                        throw new sys.InvalidOperationException();
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>No change email messages unless you're the creator.</para>
        /// </summary>
        public sealed class Default : DocSubscriptionLevel
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Default> Encoder = new DefaultEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Default> Decoder = new DefaultDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Default" /> class.</para>
            /// </summary>
            private Default()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Default</para>
            /// </summary>
            public static readonly Default Instance = new Default();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Default" />.</para>
            /// </summary>
            private class DefaultEncoder : enc.StructEncoder<Default>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Default value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Default" />.</para>
            /// </summary>
            private class DefaultDecoder : enc.StructDecoder<Default>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Default" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Default Create()
                {
                    return Default.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Ignored: Not shown in pad lists or activity and no email message is
        /// sent.</para>
        /// </summary>
        public sealed class Ignore : DocSubscriptionLevel
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Ignore> Encoder = new IgnoreEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Ignore> Decoder = new IgnoreDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Ignore" /> class.</para>
            /// </summary>
            private Ignore()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Ignore</para>
            /// </summary>
            public static readonly Ignore Instance = new Ignore();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Ignore" />.</para>
            /// </summary>
            private class IgnoreEncoder : enc.StructEncoder<Ignore>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Ignore value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Ignore" />.</para>
            /// </summary>
            private class IgnoreDecoder : enc.StructDecoder<Ignore>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Ignore" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Ignore Create()
                {
                    return Ignore.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Subscribed: Shown in pad lists and activity and change email messages are
        /// sent.</para>
        /// </summary>
        public sealed class Every : DocSubscriptionLevel
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Every> Encoder = new EveryEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Every> Decoder = new EveryDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Every" /> class.</para>
            /// </summary>
            private Every()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Every</para>
            /// </summary>
            public static readonly Every Instance = new Every();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Every" />.</para>
            /// </summary>
            private class EveryEncoder : enc.StructEncoder<Every>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Every value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Every" />.</para>
            /// </summary>
            private class EveryDecoder : enc.StructDecoder<Every>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Every" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Every Create()
                {
                    return Every.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Unsubscribed: Shown in pad lists, but not in activity and no change email
        /// messages are sent.</para>
        /// </summary>
        public sealed class NoEmail : DocSubscriptionLevel
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<NoEmail> Encoder = new NoEmailEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<NoEmail> Decoder = new NoEmailDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="NoEmail" /> class.</para>
            /// </summary>
            private NoEmail()
            {
            }

            /// <summary>
            /// <para>A singleton instance of NoEmail</para>
            /// </summary>
            public static readonly NoEmail Instance = new NoEmail();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="NoEmail" />.</para>
            /// </summary>
            private class NoEmailEncoder : enc.StructEncoder<NoEmail>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(NoEmail value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="NoEmail" />.</para>
            /// </summary>
            private class NoEmailDecoder : enc.StructDecoder<NoEmail>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="NoEmail" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override NoEmail Create()
                {
                    return NoEmail.Instance;
                }

            }

            #endregion
        }
    }
}

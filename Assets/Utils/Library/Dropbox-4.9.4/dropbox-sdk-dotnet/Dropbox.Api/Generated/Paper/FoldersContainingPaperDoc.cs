// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Paper
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Metadata about Paper folders containing the specififed Paper doc.</para>
    /// </summary>
    public class FoldersContainingPaperDoc
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<FoldersContainingPaperDoc> Encoder = new FoldersContainingPaperDocEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<FoldersContainingPaperDoc> Decoder = new FoldersContainingPaperDocDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="FoldersContainingPaperDoc" />
        /// class.</para>
        /// </summary>
        /// <param name="folderSharingPolicyType">The sharing policy of the folder containing
        /// the Paper doc.</param>
        /// <param name="folders">The folder path. If present the first folder is the root
        /// folder.</param>
        public FoldersContainingPaperDoc(FolderSharingPolicyType folderSharingPolicyType = null,
                                         col.IEnumerable<Folder> folders = null)
        {
            var foldersList = enc.Util.ToList(folders);

            this.FolderSharingPolicyType = folderSharingPolicyType;
            this.Folders = foldersList;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="FoldersContainingPaperDoc" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public FoldersContainingPaperDoc()
        {
        }

        /// <summary>
        /// <para>The sharing policy of the folder containing the Paper doc.</para>
        /// </summary>
        public FolderSharingPolicyType FolderSharingPolicyType { get; protected set; }

        /// <summary>
        /// <para>The folder path. If present the first folder is the root folder.</para>
        /// </summary>
        public col.IList<Folder> Folders { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="FoldersContainingPaperDoc" />.</para>
        /// </summary>
        private class FoldersContainingPaperDocEncoder : enc.StructEncoder<FoldersContainingPaperDoc>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(FoldersContainingPaperDoc value, enc.IJsonWriter writer)
            {
                if (value.FolderSharingPolicyType != null)
                {
                    WriteProperty("folder_sharing_policy_type", value.FolderSharingPolicyType, writer, global::Dropbox.Api.Paper.FolderSharingPolicyType.Encoder);
                }
                if (value.Folders.Count > 0)
                {
                    WriteListProperty("folders", value.Folders, writer, global::Dropbox.Api.Paper.Folder.Encoder);
                }
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="FoldersContainingPaperDoc" />.</para>
        /// </summary>
        private class FoldersContainingPaperDocDecoder : enc.StructDecoder<FoldersContainingPaperDoc>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="FoldersContainingPaperDoc"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override FoldersContainingPaperDoc Create()
            {
                return new FoldersContainingPaperDoc();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(FoldersContainingPaperDoc value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "folder_sharing_policy_type":
                        value.FolderSharingPolicyType = global::Dropbox.Api.Paper.FolderSharingPolicyType.Decoder.Decode(reader);
                        break;
                    case "folders":
                        value.Folders = ReadList<Folder>(reader, global::Dropbox.Api.Paper.Folder.Decoder);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}

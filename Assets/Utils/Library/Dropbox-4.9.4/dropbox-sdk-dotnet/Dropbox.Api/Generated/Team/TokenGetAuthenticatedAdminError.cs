// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Team
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Error returned by <see
    /// cref="Dropbox.Api.Team.Routes.TeamTeamRoutes.TokenGetAuthenticatedAdminAsync"
    /// />.</para>
    /// </summary>
    public class TokenGetAuthenticatedAdminError
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<TokenGetAuthenticatedAdminError> Encoder = new TokenGetAuthenticatedAdminErrorEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<TokenGetAuthenticatedAdminError> Decoder = new TokenGetAuthenticatedAdminErrorDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="TokenGetAuthenticatedAdminError"
        /// /> class.</para>
        /// </summary>
        public TokenGetAuthenticatedAdminError()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is MappingNotFound</para>
        /// </summary>
        public bool IsMappingNotFound
        {
            get
            {
                return this is MappingNotFound;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a MappingNotFound, or <c>null</c>.</para>
        /// </summary>
        public MappingNotFound AsMappingNotFound
        {
            get
            {
                return this as MappingNotFound;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is AdminNotActive</para>
        /// </summary>
        public bool IsAdminNotActive
        {
            get
            {
                return this is AdminNotActive;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a AdminNotActive, or <c>null</c>.</para>
        /// </summary>
        public AdminNotActive AsAdminNotActive
        {
            get
            {
                return this as AdminNotActive;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="TokenGetAuthenticatedAdminError" />.</para>
        /// </summary>
        private class TokenGetAuthenticatedAdminErrorEncoder : enc.StructEncoder<TokenGetAuthenticatedAdminError>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(TokenGetAuthenticatedAdminError value, enc.IJsonWriter writer)
            {
                if (value is MappingNotFound)
                {
                    WriteProperty(".tag", "mapping_not_found", writer, enc.StringEncoder.Instance);
                    MappingNotFound.Encoder.EncodeFields((MappingNotFound)value, writer);
                    return;
                }
                if (value is AdminNotActive)
                {
                    WriteProperty(".tag", "admin_not_active", writer, enc.StringEncoder.Instance);
                    AdminNotActive.Encoder.EncodeFields((AdminNotActive)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="TokenGetAuthenticatedAdminError" />.</para>
        /// </summary>
        private class TokenGetAuthenticatedAdminErrorDecoder : enc.UnionDecoder<TokenGetAuthenticatedAdminError>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="TokenGetAuthenticatedAdminError"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override TokenGetAuthenticatedAdminError Create()
            {
                return new TokenGetAuthenticatedAdminError();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override TokenGetAuthenticatedAdminError Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "mapping_not_found":
                        return MappingNotFound.Decoder.DecodeFields(reader);
                    case "admin_not_active":
                        return AdminNotActive.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The current token is not associated with a team admin, because mappings were
        /// not recorded when the token was created. Consider re-authorizing a new access token
        /// to record its authenticating admin.</para>
        /// </summary>
        public sealed class MappingNotFound : TokenGetAuthenticatedAdminError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<MappingNotFound> Encoder = new MappingNotFoundEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<MappingNotFound> Decoder = new MappingNotFoundDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="MappingNotFound" />
            /// class.</para>
            /// </summary>
            private MappingNotFound()
            {
            }

            /// <summary>
            /// <para>A singleton instance of MappingNotFound</para>
            /// </summary>
            public static readonly MappingNotFound Instance = new MappingNotFound();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="MappingNotFound" />.</para>
            /// </summary>
            private class MappingNotFoundEncoder : enc.StructEncoder<MappingNotFound>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(MappingNotFound value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="MappingNotFound" />.</para>
            /// </summary>
            private class MappingNotFoundDecoder : enc.StructDecoder<MappingNotFound>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="MappingNotFound" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override MappingNotFound Create()
                {
                    return MappingNotFound.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Either the team admin that authorized this token is no longer an active
        /// member of the team or no longer a team admin.</para>
        /// </summary>
        public sealed class AdminNotActive : TokenGetAuthenticatedAdminError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<AdminNotActive> Encoder = new AdminNotActiveEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<AdminNotActive> Decoder = new AdminNotActiveDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="AdminNotActive" />
            /// class.</para>
            /// </summary>
            private AdminNotActive()
            {
            }

            /// <summary>
            /// <para>A singleton instance of AdminNotActive</para>
            /// </summary>
            public static readonly AdminNotActive Instance = new AdminNotActive();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="AdminNotActive" />.</para>
            /// </summary>
            private class AdminNotActiveEncoder : enc.StructEncoder<AdminNotActive>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(AdminNotActive value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="AdminNotActive" />.</para>
            /// </summary>
            private class AdminNotActiveDecoder : enc.StructDecoder<AdminNotActive>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="AdminNotActive" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override AdminNotActive Create()
                {
                    return AdminNotActive.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : TokenGetAuthenticatedAdminError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}

// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Team
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>A set of features that a Dropbox Business account may support.</para>
    /// </summary>
    public class Feature
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<Feature> Encoder = new FeatureEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<Feature> Decoder = new FeatureDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="Feature" /> class.</para>
        /// </summary>
        public Feature()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is UploadApiRateLimit</para>
        /// </summary>
        public bool IsUploadApiRateLimit
        {
            get
            {
                return this is UploadApiRateLimit;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a UploadApiRateLimit, or <c>null</c>.</para>
        /// </summary>
        public UploadApiRateLimit AsUploadApiRateLimit
        {
            get
            {
                return this as UploadApiRateLimit;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is HasTeamSharedDropbox</para>
        /// </summary>
        public bool IsHasTeamSharedDropbox
        {
            get
            {
                return this is HasTeamSharedDropbox;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a HasTeamSharedDropbox, or <c>null</c>.</para>
        /// </summary>
        public HasTeamSharedDropbox AsHasTeamSharedDropbox
        {
            get
            {
                return this as HasTeamSharedDropbox;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is HasTeamFileEvents</para>
        /// </summary>
        public bool IsHasTeamFileEvents
        {
            get
            {
                return this is HasTeamFileEvents;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a HasTeamFileEvents, or <c>null</c>.</para>
        /// </summary>
        public HasTeamFileEvents AsHasTeamFileEvents
        {
            get
            {
                return this as HasTeamFileEvents;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is HasTeamSelectiveSync</para>
        /// </summary>
        public bool IsHasTeamSelectiveSync
        {
            get
            {
                return this is HasTeamSelectiveSync;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a HasTeamSelectiveSync, or <c>null</c>.</para>
        /// </summary>
        public HasTeamSelectiveSync AsHasTeamSelectiveSync
        {
            get
            {
                return this as HasTeamSelectiveSync;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="Feature" />.</para>
        /// </summary>
        private class FeatureEncoder : enc.StructEncoder<Feature>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(Feature value, enc.IJsonWriter writer)
            {
                if (value is UploadApiRateLimit)
                {
                    WriteProperty(".tag", "upload_api_rate_limit", writer, enc.StringEncoder.Instance);
                    UploadApiRateLimit.Encoder.EncodeFields((UploadApiRateLimit)value, writer);
                    return;
                }
                if (value is HasTeamSharedDropbox)
                {
                    WriteProperty(".tag", "has_team_shared_dropbox", writer, enc.StringEncoder.Instance);
                    HasTeamSharedDropbox.Encoder.EncodeFields((HasTeamSharedDropbox)value, writer);
                    return;
                }
                if (value is HasTeamFileEvents)
                {
                    WriteProperty(".tag", "has_team_file_events", writer, enc.StringEncoder.Instance);
                    HasTeamFileEvents.Encoder.EncodeFields((HasTeamFileEvents)value, writer);
                    return;
                }
                if (value is HasTeamSelectiveSync)
                {
                    WriteProperty(".tag", "has_team_selective_sync", writer, enc.StringEncoder.Instance);
                    HasTeamSelectiveSync.Encoder.EncodeFields((HasTeamSelectiveSync)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="Feature" />.</para>
        /// </summary>
        private class FeatureDecoder : enc.UnionDecoder<Feature>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="Feature" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override Feature Create()
            {
                return new Feature();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override Feature Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "upload_api_rate_limit":
                        return UploadApiRateLimit.Decoder.DecodeFields(reader);
                    case "has_team_shared_dropbox":
                        return HasTeamSharedDropbox.Decoder.DecodeFields(reader);
                    case "has_team_file_events":
                        return HasTeamFileEvents.Decoder.DecodeFields(reader);
                    case "has_team_selective_sync":
                        return HasTeamSelectiveSync.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The number of upload API calls allowed per month.</para>
        /// </summary>
        public sealed class UploadApiRateLimit : Feature
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<UploadApiRateLimit> Encoder = new UploadApiRateLimitEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<UploadApiRateLimit> Decoder = new UploadApiRateLimitDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="UploadApiRateLimit" />
            /// class.</para>
            /// </summary>
            private UploadApiRateLimit()
            {
            }

            /// <summary>
            /// <para>A singleton instance of UploadApiRateLimit</para>
            /// </summary>
            public static readonly UploadApiRateLimit Instance = new UploadApiRateLimit();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="UploadApiRateLimit" />.</para>
            /// </summary>
            private class UploadApiRateLimitEncoder : enc.StructEncoder<UploadApiRateLimit>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(UploadApiRateLimit value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="UploadApiRateLimit" />.</para>
            /// </summary>
            private class UploadApiRateLimitDecoder : enc.StructDecoder<UploadApiRateLimit>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="UploadApiRateLimit"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override UploadApiRateLimit Create()
                {
                    return UploadApiRateLimit.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Does this team have a shared team root.</para>
        /// </summary>
        public sealed class HasTeamSharedDropbox : Feature
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<HasTeamSharedDropbox> Encoder = new HasTeamSharedDropboxEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<HasTeamSharedDropbox> Decoder = new HasTeamSharedDropboxDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="HasTeamSharedDropbox" />
            /// class.</para>
            /// </summary>
            private HasTeamSharedDropbox()
            {
            }

            /// <summary>
            /// <para>A singleton instance of HasTeamSharedDropbox</para>
            /// </summary>
            public static readonly HasTeamSharedDropbox Instance = new HasTeamSharedDropbox();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="HasTeamSharedDropbox" />.</para>
            /// </summary>
            private class HasTeamSharedDropboxEncoder : enc.StructEncoder<HasTeamSharedDropbox>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(HasTeamSharedDropbox value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="HasTeamSharedDropbox" />.</para>
            /// </summary>
            private class HasTeamSharedDropboxDecoder : enc.StructDecoder<HasTeamSharedDropbox>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="HasTeamSharedDropbox"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override HasTeamSharedDropbox Create()
                {
                    return HasTeamSharedDropbox.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Does this team have file events.</para>
        /// </summary>
        public sealed class HasTeamFileEvents : Feature
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<HasTeamFileEvents> Encoder = new HasTeamFileEventsEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<HasTeamFileEvents> Decoder = new HasTeamFileEventsDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="HasTeamFileEvents" />
            /// class.</para>
            /// </summary>
            private HasTeamFileEvents()
            {
            }

            /// <summary>
            /// <para>A singleton instance of HasTeamFileEvents</para>
            /// </summary>
            public static readonly HasTeamFileEvents Instance = new HasTeamFileEvents();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="HasTeamFileEvents" />.</para>
            /// </summary>
            private class HasTeamFileEventsEncoder : enc.StructEncoder<HasTeamFileEvents>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(HasTeamFileEvents value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="HasTeamFileEvents" />.</para>
            /// </summary>
            private class HasTeamFileEventsDecoder : enc.StructDecoder<HasTeamFileEvents>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="HasTeamFileEvents"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override HasTeamFileEvents Create()
                {
                    return HasTeamFileEvents.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Does this team have team selective sync enabled.</para>
        /// </summary>
        public sealed class HasTeamSelectiveSync : Feature
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<HasTeamSelectiveSync> Encoder = new HasTeamSelectiveSyncEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<HasTeamSelectiveSync> Decoder = new HasTeamSelectiveSyncDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="HasTeamSelectiveSync" />
            /// class.</para>
            /// </summary>
            private HasTeamSelectiveSync()
            {
            }

            /// <summary>
            /// <para>A singleton instance of HasTeamSelectiveSync</para>
            /// </summary>
            public static readonly HasTeamSelectiveSync Instance = new HasTeamSelectiveSync();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="HasTeamSelectiveSync" />.</para>
            /// </summary>
            private class HasTeamSelectiveSyncEncoder : enc.StructEncoder<HasTeamSelectiveSync>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(HasTeamSelectiveSync value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="HasTeamSelectiveSync" />.</para>
            /// </summary>
            private class HasTeamSelectiveSyncDecoder : enc.StructDecoder<HasTeamSelectiveSync>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="HasTeamSelectiveSync"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override HasTeamSelectiveSync Create()
                {
                    return HasTeamSelectiveSync.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : Feature
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}

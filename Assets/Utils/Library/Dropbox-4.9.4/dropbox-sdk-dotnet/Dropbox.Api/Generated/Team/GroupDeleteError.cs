// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Team
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The group delete error object</para>
    /// </summary>
    public class GroupDeleteError
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<GroupDeleteError> Encoder = new GroupDeleteErrorEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<GroupDeleteError> Decoder = new GroupDeleteErrorDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="GroupDeleteError" />
        /// class.</para>
        /// </summary>
        public GroupDeleteError()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is GroupAlreadyDeleted</para>
        /// </summary>
        public bool IsGroupAlreadyDeleted
        {
            get
            {
                return this is GroupAlreadyDeleted;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a GroupAlreadyDeleted, or <c>null</c>.</para>
        /// </summary>
        public GroupAlreadyDeleted AsGroupAlreadyDeleted
        {
            get
            {
                return this as GroupAlreadyDeleted;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// SystemManagedGroupDisallowed</para>
        /// </summary>
        public bool IsSystemManagedGroupDisallowed
        {
            get
            {
                return this is SystemManagedGroupDisallowed;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a SystemManagedGroupDisallowed, or <c>null</c>.</para>
        /// </summary>
        public SystemManagedGroupDisallowed AsSystemManagedGroupDisallowed
        {
            get
            {
                return this as SystemManagedGroupDisallowed;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="GroupDeleteError" />.</para>
        /// </summary>
        private class GroupDeleteErrorEncoder : enc.StructEncoder<GroupDeleteError>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(GroupDeleteError value, enc.IJsonWriter writer)
            {
                if (value is GroupAlreadyDeleted)
                {
                    WriteProperty(".tag", "group_already_deleted", writer, enc.StringEncoder.Instance);
                    GroupAlreadyDeleted.Encoder.EncodeFields((GroupAlreadyDeleted)value, writer);
                    return;
                }
                if (value is SystemManagedGroupDisallowed)
                {
                    WriteProperty(".tag", "system_managed_group_disallowed", writer, enc.StringEncoder.Instance);
                    SystemManagedGroupDisallowed.Encoder.EncodeFields((SystemManagedGroupDisallowed)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="GroupDeleteError" />.</para>
        /// </summary>
        private class GroupDeleteErrorDecoder : enc.UnionDecoder<GroupDeleteError>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="GroupDeleteError" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override GroupDeleteError Create()
            {
                return new GroupDeleteError();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override GroupDeleteError Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "group_already_deleted":
                        return GroupAlreadyDeleted.Decoder.DecodeFields(reader);
                    case "system_managed_group_disallowed":
                        return SystemManagedGroupDisallowed.Decoder.DecodeFields(reader);
                    default:
                        throw new sys.InvalidOperationException();
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>This group has already been deleted.</para>
        /// </summary>
        public sealed class GroupAlreadyDeleted : GroupDeleteError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<GroupAlreadyDeleted> Encoder = new GroupAlreadyDeletedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<GroupAlreadyDeleted> Decoder = new GroupAlreadyDeletedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="GroupAlreadyDeleted" />
            /// class.</para>
            /// </summary>
            private GroupAlreadyDeleted()
            {
            }

            /// <summary>
            /// <para>A singleton instance of GroupAlreadyDeleted</para>
            /// </summary>
            public static readonly GroupAlreadyDeleted Instance = new GroupAlreadyDeleted();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="GroupAlreadyDeleted" />.</para>
            /// </summary>
            private class GroupAlreadyDeletedEncoder : enc.StructEncoder<GroupAlreadyDeleted>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(GroupAlreadyDeleted value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="GroupAlreadyDeleted" />.</para>
            /// </summary>
            private class GroupAlreadyDeletedDecoder : enc.StructDecoder<GroupAlreadyDeleted>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="GroupAlreadyDeleted"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override GroupAlreadyDeleted Create()
                {
                    return GroupAlreadyDeleted.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>This operation is not supported on system-managed groups.</para>
        /// </summary>
        public sealed class SystemManagedGroupDisallowed : GroupDeleteError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<SystemManagedGroupDisallowed> Encoder = new SystemManagedGroupDisallowedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<SystemManagedGroupDisallowed> Decoder = new SystemManagedGroupDisallowedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see
            /// cref="SystemManagedGroupDisallowed" /> class.</para>
            /// </summary>
            private SystemManagedGroupDisallowed()
            {
            }

            /// <summary>
            /// <para>A singleton instance of SystemManagedGroupDisallowed</para>
            /// </summary>
            public static readonly SystemManagedGroupDisallowed Instance = new SystemManagedGroupDisallowed();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="SystemManagedGroupDisallowed" />.</para>
            /// </summary>
            private class SystemManagedGroupDisallowedEncoder : enc.StructEncoder<SystemManagedGroupDisallowed>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(SystemManagedGroupDisallowed value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="SystemManagedGroupDisallowed" />.</para>
            /// </summary>
            private class SystemManagedGroupDisallowedDecoder : enc.StructDecoder<SystemManagedGroupDisallowed>
            {
                /// <summary>
                /// <para>Create a new instance of type <see
                /// cref="SystemManagedGroupDisallowed" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override SystemManagedGroupDisallowed Create()
                {
                    return SystemManagedGroupDisallowed.Instance;
                }

            }

            #endregion
        }
    }
}

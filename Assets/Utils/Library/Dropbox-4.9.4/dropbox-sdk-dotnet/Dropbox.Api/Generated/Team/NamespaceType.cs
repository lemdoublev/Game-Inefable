// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Team
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The namespace type object</para>
    /// </summary>
    public class NamespaceType
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<NamespaceType> Encoder = new NamespaceTypeEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<NamespaceType> Decoder = new NamespaceTypeDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="NamespaceType" /> class.</para>
        /// </summary>
        public NamespaceType()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is AppFolder</para>
        /// </summary>
        public bool IsAppFolder
        {
            get
            {
                return this is AppFolder;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a AppFolder, or <c>null</c>.</para>
        /// </summary>
        public AppFolder AsAppFolder
        {
            get
            {
                return this as AppFolder;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is SharedFolder</para>
        /// </summary>
        public bool IsSharedFolder
        {
            get
            {
                return this is SharedFolder;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a SharedFolder, or <c>null</c>.</para>
        /// </summary>
        public SharedFolder AsSharedFolder
        {
            get
            {
                return this as SharedFolder;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is TeamFolder</para>
        /// </summary>
        public bool IsTeamFolder
        {
            get
            {
                return this is TeamFolder;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TeamFolder, or <c>null</c>.</para>
        /// </summary>
        public TeamFolder AsTeamFolder
        {
            get
            {
                return this as TeamFolder;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is TeamMemberFolder</para>
        /// </summary>
        public bool IsTeamMemberFolder
        {
            get
            {
                return this is TeamMemberFolder;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TeamMemberFolder, or <c>null</c>.</para>
        /// </summary>
        public TeamMemberFolder AsTeamMemberFolder
        {
            get
            {
                return this as TeamMemberFolder;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="NamespaceType" />.</para>
        /// </summary>
        private class NamespaceTypeEncoder : enc.StructEncoder<NamespaceType>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(NamespaceType value, enc.IJsonWriter writer)
            {
                if (value is AppFolder)
                {
                    WriteProperty(".tag", "app_folder", writer, enc.StringEncoder.Instance);
                    AppFolder.Encoder.EncodeFields((AppFolder)value, writer);
                    return;
                }
                if (value is SharedFolder)
                {
                    WriteProperty(".tag", "shared_folder", writer, enc.StringEncoder.Instance);
                    SharedFolder.Encoder.EncodeFields((SharedFolder)value, writer);
                    return;
                }
                if (value is TeamFolder)
                {
                    WriteProperty(".tag", "team_folder", writer, enc.StringEncoder.Instance);
                    TeamFolder.Encoder.EncodeFields((TeamFolder)value, writer);
                    return;
                }
                if (value is TeamMemberFolder)
                {
                    WriteProperty(".tag", "team_member_folder", writer, enc.StringEncoder.Instance);
                    TeamMemberFolder.Encoder.EncodeFields((TeamMemberFolder)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="NamespaceType" />.</para>
        /// </summary>
        private class NamespaceTypeDecoder : enc.UnionDecoder<NamespaceType>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="NamespaceType" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override NamespaceType Create()
            {
                return new NamespaceType();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override NamespaceType Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "app_folder":
                        return AppFolder.Decoder.DecodeFields(reader);
                    case "shared_folder":
                        return SharedFolder.Decoder.DecodeFields(reader);
                    case "team_folder":
                        return TeamFolder.Decoder.DecodeFields(reader);
                    case "team_member_folder":
                        return TeamMemberFolder.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>App sandbox folder.</para>
        /// </summary>
        public sealed class AppFolder : NamespaceType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<AppFolder> Encoder = new AppFolderEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<AppFolder> Decoder = new AppFolderDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="AppFolder" /> class.</para>
            /// </summary>
            private AppFolder()
            {
            }

            /// <summary>
            /// <para>A singleton instance of AppFolder</para>
            /// </summary>
            public static readonly AppFolder Instance = new AppFolder();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="AppFolder" />.</para>
            /// </summary>
            private class AppFolderEncoder : enc.StructEncoder<AppFolder>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(AppFolder value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="AppFolder" />.</para>
            /// </summary>
            private class AppFolderDecoder : enc.StructDecoder<AppFolder>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="AppFolder" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override AppFolder Create()
                {
                    return AppFolder.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Shared folder.</para>
        /// </summary>
        public sealed class SharedFolder : NamespaceType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<SharedFolder> Encoder = new SharedFolderEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<SharedFolder> Decoder = new SharedFolderDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="SharedFolder" />
            /// class.</para>
            /// </summary>
            private SharedFolder()
            {
            }

            /// <summary>
            /// <para>A singleton instance of SharedFolder</para>
            /// </summary>
            public static readonly SharedFolder Instance = new SharedFolder();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="SharedFolder" />.</para>
            /// </summary>
            private class SharedFolderEncoder : enc.StructEncoder<SharedFolder>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(SharedFolder value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="SharedFolder" />.</para>
            /// </summary>
            private class SharedFolderDecoder : enc.StructDecoder<SharedFolder>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="SharedFolder" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override SharedFolder Create()
                {
                    return SharedFolder.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Top-level team-owned folder.</para>
        /// </summary>
        public sealed class TeamFolder : NamespaceType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TeamFolder> Encoder = new TeamFolderEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TeamFolder> Decoder = new TeamFolderDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TeamFolder" /> class.</para>
            /// </summary>
            private TeamFolder()
            {
            }

            /// <summary>
            /// <para>A singleton instance of TeamFolder</para>
            /// </summary>
            public static readonly TeamFolder Instance = new TeamFolder();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TeamFolder" />.</para>
            /// </summary>
            private class TeamFolderEncoder : enc.StructEncoder<TeamFolder>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TeamFolder value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TeamFolder" />.</para>
            /// </summary>
            private class TeamFolderDecoder : enc.StructDecoder<TeamFolder>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="TeamFolder" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TeamFolder Create()
                {
                    return TeamFolder.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Team member's home folder.</para>
        /// </summary>
        public sealed class TeamMemberFolder : NamespaceType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TeamMemberFolder> Encoder = new TeamMemberFolderEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TeamMemberFolder> Decoder = new TeamMemberFolderDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TeamMemberFolder" />
            /// class.</para>
            /// </summary>
            private TeamMemberFolder()
            {
            }

            /// <summary>
            /// <para>A singleton instance of TeamMemberFolder</para>
            /// </summary>
            public static readonly TeamMemberFolder Instance = new TeamMemberFolder();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TeamMemberFolder" />.</para>
            /// </summary>
            private class TeamMemberFolderEncoder : enc.StructEncoder<TeamMemberFolder>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TeamMemberFolder value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TeamMemberFolder" />.</para>
            /// </summary>
            private class TeamMemberFolderDecoder : enc.StructDecoder<TeamMemberFolder>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="TeamMemberFolder" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TeamMemberFolder Create()
                {
                    return TeamMemberFolder.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : NamespaceType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}

// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Team
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The team folder update sync settings arg object</para>
    /// </summary>
    /// <seealso cref="Global::Dropbox.Api.Team.TeamFolderIdArg" />
    public class TeamFolderUpdateSyncSettingsArg : TeamFolderIdArg
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<TeamFolderUpdateSyncSettingsArg> Encoder = new TeamFolderUpdateSyncSettingsArgEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<TeamFolderUpdateSyncSettingsArg> Decoder = new TeamFolderUpdateSyncSettingsArgDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="TeamFolderUpdateSyncSettingsArg"
        /// /> class.</para>
        /// </summary>
        /// <param name="teamFolderId">The ID of the team folder.</param>
        /// <param name="syncSetting">Sync setting to apply to the team folder itself. Only
        /// meaningful if the team folder is not a shared team root.</param>
        /// <param name="contentSyncSettings">Sync settings to apply to contents of this team
        /// folder.</param>
        public TeamFolderUpdateSyncSettingsArg(string teamFolderId,
                                               global::Dropbox.Api.Files.SyncSettingArg syncSetting = null,
                                               col.IEnumerable<global::Dropbox.Api.Files.ContentSyncSettingArg> contentSyncSettings = null)
            : base(teamFolderId)
        {
            var contentSyncSettingsList = enc.Util.ToList(contentSyncSettings);

            this.SyncSetting = syncSetting;
            this.ContentSyncSettings = contentSyncSettingsList;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="TeamFolderUpdateSyncSettingsArg"
        /// /> class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public TeamFolderUpdateSyncSettingsArg()
        {
        }

        /// <summary>
        /// <para>Sync setting to apply to the team folder itself. Only meaningful if the team
        /// folder is not a shared team root.</para>
        /// </summary>
        public global::Dropbox.Api.Files.SyncSettingArg SyncSetting { get; protected set; }

        /// <summary>
        /// <para>Sync settings to apply to contents of this team folder.</para>
        /// </summary>
        public col.IList<global::Dropbox.Api.Files.ContentSyncSettingArg> ContentSyncSettings { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="TeamFolderUpdateSyncSettingsArg" />.</para>
        /// </summary>
        private class TeamFolderUpdateSyncSettingsArgEncoder : enc.StructEncoder<TeamFolderUpdateSyncSettingsArg>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(TeamFolderUpdateSyncSettingsArg value, enc.IJsonWriter writer)
            {
                WriteProperty("team_folder_id", value.TeamFolderId, writer, enc.StringEncoder.Instance);
                if (value.SyncSetting != null)
                {
                    WriteProperty("sync_setting", value.SyncSetting, writer, global::Dropbox.Api.Files.SyncSettingArg.Encoder);
                }
                if (value.ContentSyncSettings.Count > 0)
                {
                    WriteListProperty("content_sync_settings", value.ContentSyncSettings, writer, global::Dropbox.Api.Files.ContentSyncSettingArg.Encoder);
                }
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="TeamFolderUpdateSyncSettingsArg" />.</para>
        /// </summary>
        private class TeamFolderUpdateSyncSettingsArgDecoder : enc.StructDecoder<TeamFolderUpdateSyncSettingsArg>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="TeamFolderUpdateSyncSettingsArg"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override TeamFolderUpdateSyncSettingsArg Create()
            {
                return new TeamFolderUpdateSyncSettingsArg();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(TeamFolderUpdateSyncSettingsArg value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "team_folder_id":
                        value.TeamFolderId = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "sync_setting":
                        value.SyncSetting = global::Dropbox.Api.Files.SyncSettingArg.Decoder.Decode(reader);
                        break;
                    case "content_sync_settings":
                        value.ContentSyncSettings = ReadList<global::Dropbox.Api.Files.ContentSyncSettingArg>(reader, global::Dropbox.Api.Files.ContentSyncSettingArg.Decoder);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}

// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Sharing
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Actions that can be performed on a link.</para>
    /// </summary>
    public class LinkAction
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<LinkAction> Encoder = new LinkActionEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<LinkAction> Decoder = new LinkActionDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="LinkAction" /> class.</para>
        /// </summary>
        public LinkAction()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is ChangeAccessLevel</para>
        /// </summary>
        public bool IsChangeAccessLevel
        {
            get
            {
                return this is ChangeAccessLevel;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a ChangeAccessLevel, or <c>null</c>.</para>
        /// </summary>
        public ChangeAccessLevel AsChangeAccessLevel
        {
            get
            {
                return this as ChangeAccessLevel;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is ChangeAudience</para>
        /// </summary>
        public bool IsChangeAudience
        {
            get
            {
                return this is ChangeAudience;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a ChangeAudience, or <c>null</c>.</para>
        /// </summary>
        public ChangeAudience AsChangeAudience
        {
            get
            {
                return this as ChangeAudience;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is RemoveExpiry</para>
        /// </summary>
        public bool IsRemoveExpiry
        {
            get
            {
                return this is RemoveExpiry;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a RemoveExpiry, or <c>null</c>.</para>
        /// </summary>
        public RemoveExpiry AsRemoveExpiry
        {
            get
            {
                return this as RemoveExpiry;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is RemovePassword</para>
        /// </summary>
        public bool IsRemovePassword
        {
            get
            {
                return this is RemovePassword;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a RemovePassword, or <c>null</c>.</para>
        /// </summary>
        public RemovePassword AsRemovePassword
        {
            get
            {
                return this as RemovePassword;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is SetExpiry</para>
        /// </summary>
        public bool IsSetExpiry
        {
            get
            {
                return this is SetExpiry;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a SetExpiry, or <c>null</c>.</para>
        /// </summary>
        public SetExpiry AsSetExpiry
        {
            get
            {
                return this as SetExpiry;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is SetPassword</para>
        /// </summary>
        public bool IsSetPassword
        {
            get
            {
                return this is SetPassword;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a SetPassword, or <c>null</c>.</para>
        /// </summary>
        public SetPassword AsSetPassword
        {
            get
            {
                return this as SetPassword;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="LinkAction" />.</para>
        /// </summary>
        private class LinkActionEncoder : enc.StructEncoder<LinkAction>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(LinkAction value, enc.IJsonWriter writer)
            {
                if (value is ChangeAccessLevel)
                {
                    WriteProperty(".tag", "change_access_level", writer, enc.StringEncoder.Instance);
                    ChangeAccessLevel.Encoder.EncodeFields((ChangeAccessLevel)value, writer);
                    return;
                }
                if (value is ChangeAudience)
                {
                    WriteProperty(".tag", "change_audience", writer, enc.StringEncoder.Instance);
                    ChangeAudience.Encoder.EncodeFields((ChangeAudience)value, writer);
                    return;
                }
                if (value is RemoveExpiry)
                {
                    WriteProperty(".tag", "remove_expiry", writer, enc.StringEncoder.Instance);
                    RemoveExpiry.Encoder.EncodeFields((RemoveExpiry)value, writer);
                    return;
                }
                if (value is RemovePassword)
                {
                    WriteProperty(".tag", "remove_password", writer, enc.StringEncoder.Instance);
                    RemovePassword.Encoder.EncodeFields((RemovePassword)value, writer);
                    return;
                }
                if (value is SetExpiry)
                {
                    WriteProperty(".tag", "set_expiry", writer, enc.StringEncoder.Instance);
                    SetExpiry.Encoder.EncodeFields((SetExpiry)value, writer);
                    return;
                }
                if (value is SetPassword)
                {
                    WriteProperty(".tag", "set_password", writer, enc.StringEncoder.Instance);
                    SetPassword.Encoder.EncodeFields((SetPassword)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="LinkAction" />.</para>
        /// </summary>
        private class LinkActionDecoder : enc.UnionDecoder<LinkAction>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="LinkAction" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override LinkAction Create()
            {
                return new LinkAction();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override LinkAction Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "change_access_level":
                        return ChangeAccessLevel.Decoder.DecodeFields(reader);
                    case "change_audience":
                        return ChangeAudience.Decoder.DecodeFields(reader);
                    case "remove_expiry":
                        return RemoveExpiry.Decoder.DecodeFields(reader);
                    case "remove_password":
                        return RemovePassword.Decoder.DecodeFields(reader);
                    case "set_expiry":
                        return SetExpiry.Decoder.DecodeFields(reader);
                    case "set_password":
                        return SetPassword.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>Change the access level of the link.</para>
        /// </summary>
        public sealed class ChangeAccessLevel : LinkAction
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<ChangeAccessLevel> Encoder = new ChangeAccessLevelEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<ChangeAccessLevel> Decoder = new ChangeAccessLevelDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="ChangeAccessLevel" />
            /// class.</para>
            /// </summary>
            private ChangeAccessLevel()
            {
            }

            /// <summary>
            /// <para>A singleton instance of ChangeAccessLevel</para>
            /// </summary>
            public static readonly ChangeAccessLevel Instance = new ChangeAccessLevel();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="ChangeAccessLevel" />.</para>
            /// </summary>
            private class ChangeAccessLevelEncoder : enc.StructEncoder<ChangeAccessLevel>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(ChangeAccessLevel value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="ChangeAccessLevel" />.</para>
            /// </summary>
            private class ChangeAccessLevelDecoder : enc.StructDecoder<ChangeAccessLevel>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="ChangeAccessLevel"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override ChangeAccessLevel Create()
                {
                    return ChangeAccessLevel.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Change the audience of the link.</para>
        /// </summary>
        public sealed class ChangeAudience : LinkAction
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<ChangeAudience> Encoder = new ChangeAudienceEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<ChangeAudience> Decoder = new ChangeAudienceDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="ChangeAudience" />
            /// class.</para>
            /// </summary>
            private ChangeAudience()
            {
            }

            /// <summary>
            /// <para>A singleton instance of ChangeAudience</para>
            /// </summary>
            public static readonly ChangeAudience Instance = new ChangeAudience();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="ChangeAudience" />.</para>
            /// </summary>
            private class ChangeAudienceEncoder : enc.StructEncoder<ChangeAudience>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(ChangeAudience value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="ChangeAudience" />.</para>
            /// </summary>
            private class ChangeAudienceDecoder : enc.StructDecoder<ChangeAudience>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="ChangeAudience" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override ChangeAudience Create()
                {
                    return ChangeAudience.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Remove the expiry date of the link.</para>
        /// </summary>
        public sealed class RemoveExpiry : LinkAction
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<RemoveExpiry> Encoder = new RemoveExpiryEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<RemoveExpiry> Decoder = new RemoveExpiryDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="RemoveExpiry" />
            /// class.</para>
            /// </summary>
            private RemoveExpiry()
            {
            }

            /// <summary>
            /// <para>A singleton instance of RemoveExpiry</para>
            /// </summary>
            public static readonly RemoveExpiry Instance = new RemoveExpiry();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="RemoveExpiry" />.</para>
            /// </summary>
            private class RemoveExpiryEncoder : enc.StructEncoder<RemoveExpiry>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(RemoveExpiry value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="RemoveExpiry" />.</para>
            /// </summary>
            private class RemoveExpiryDecoder : enc.StructDecoder<RemoveExpiry>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="RemoveExpiry" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override RemoveExpiry Create()
                {
                    return RemoveExpiry.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Remove the password of the link.</para>
        /// </summary>
        public sealed class RemovePassword : LinkAction
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<RemovePassword> Encoder = new RemovePasswordEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<RemovePassword> Decoder = new RemovePasswordDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="RemovePassword" />
            /// class.</para>
            /// </summary>
            private RemovePassword()
            {
            }

            /// <summary>
            /// <para>A singleton instance of RemovePassword</para>
            /// </summary>
            public static readonly RemovePassword Instance = new RemovePassword();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="RemovePassword" />.</para>
            /// </summary>
            private class RemovePasswordEncoder : enc.StructEncoder<RemovePassword>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(RemovePassword value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="RemovePassword" />.</para>
            /// </summary>
            private class RemovePasswordDecoder : enc.StructDecoder<RemovePassword>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="RemovePassword" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override RemovePassword Create()
                {
                    return RemovePassword.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Create or modify the expiry date of the link.</para>
        /// </summary>
        public sealed class SetExpiry : LinkAction
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<SetExpiry> Encoder = new SetExpiryEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<SetExpiry> Decoder = new SetExpiryDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="SetExpiry" /> class.</para>
            /// </summary>
            private SetExpiry()
            {
            }

            /// <summary>
            /// <para>A singleton instance of SetExpiry</para>
            /// </summary>
            public static readonly SetExpiry Instance = new SetExpiry();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="SetExpiry" />.</para>
            /// </summary>
            private class SetExpiryEncoder : enc.StructEncoder<SetExpiry>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(SetExpiry value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="SetExpiry" />.</para>
            /// </summary>
            private class SetExpiryDecoder : enc.StructDecoder<SetExpiry>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="SetExpiry" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override SetExpiry Create()
                {
                    return SetExpiry.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Create or modify the password of the link.</para>
        /// </summary>
        public sealed class SetPassword : LinkAction
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<SetPassword> Encoder = new SetPasswordEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<SetPassword> Decoder = new SetPasswordDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="SetPassword" />
            /// class.</para>
            /// </summary>
            private SetPassword()
            {
            }

            /// <summary>
            /// <para>A singleton instance of SetPassword</para>
            /// </summary>
            public static readonly SetPassword Instance = new SetPassword();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="SetPassword" />.</para>
            /// </summary>
            private class SetPasswordEncoder : enc.StructEncoder<SetPassword>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(SetPassword value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="SetPassword" />.</para>
            /// </summary>
            private class SetPasswordDecoder : enc.StructDecoder<SetPassword>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="SetPassword" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override SetPassword Create()
                {
                    return SetPassword.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : LinkAction
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}

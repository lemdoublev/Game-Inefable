// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.SeenState
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Possible platforms on which a user may view content.</para>
    /// </summary>
    public class PlatformType
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<PlatformType> Encoder = new PlatformTypeEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<PlatformType> Decoder = new PlatformTypeDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="PlatformType" /> class.</para>
        /// </summary>
        public PlatformType()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Web</para>
        /// </summary>
        public bool IsWeb
        {
            get
            {
                return this is Web;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Web, or <c>null</c>.</para>
        /// </summary>
        public Web AsWeb
        {
            get
            {
                return this as Web;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Desktop</para>
        /// </summary>
        public bool IsDesktop
        {
            get
            {
                return this is Desktop;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Desktop, or <c>null</c>.</para>
        /// </summary>
        public Desktop AsDesktop
        {
            get
            {
                return this as Desktop;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is MobileIos</para>
        /// </summary>
        public bool IsMobileIos
        {
            get
            {
                return this is MobileIos;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a MobileIos, or <c>null</c>.</para>
        /// </summary>
        public MobileIos AsMobileIos
        {
            get
            {
                return this as MobileIos;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is MobileAndroid</para>
        /// </summary>
        public bool IsMobileAndroid
        {
            get
            {
                return this is MobileAndroid;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a MobileAndroid, or <c>null</c>.</para>
        /// </summary>
        public MobileAndroid AsMobileAndroid
        {
            get
            {
                return this as MobileAndroid;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Api</para>
        /// </summary>
        public bool IsApi
        {
            get
            {
                return this is Api;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Api, or <c>null</c>.</para>
        /// </summary>
        public Api AsApi
        {
            get
            {
                return this as Api;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Unknown</para>
        /// </summary>
        public bool IsUnknown
        {
            get
            {
                return this is Unknown;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Unknown, or <c>null</c>.</para>
        /// </summary>
        public Unknown AsUnknown
        {
            get
            {
                return this as Unknown;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Mobile</para>
        /// </summary>
        public bool IsMobile
        {
            get
            {
                return this is Mobile;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Mobile, or <c>null</c>.</para>
        /// </summary>
        public Mobile AsMobile
        {
            get
            {
                return this as Mobile;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="PlatformType" />.</para>
        /// </summary>
        private class PlatformTypeEncoder : enc.StructEncoder<PlatformType>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(PlatformType value, enc.IJsonWriter writer)
            {
                if (value is Web)
                {
                    WriteProperty(".tag", "web", writer, enc.StringEncoder.Instance);
                    Web.Encoder.EncodeFields((Web)value, writer);
                    return;
                }
                if (value is Desktop)
                {
                    WriteProperty(".tag", "desktop", writer, enc.StringEncoder.Instance);
                    Desktop.Encoder.EncodeFields((Desktop)value, writer);
                    return;
                }
                if (value is MobileIos)
                {
                    WriteProperty(".tag", "mobile_ios", writer, enc.StringEncoder.Instance);
                    MobileIos.Encoder.EncodeFields((MobileIos)value, writer);
                    return;
                }
                if (value is MobileAndroid)
                {
                    WriteProperty(".tag", "mobile_android", writer, enc.StringEncoder.Instance);
                    MobileAndroid.Encoder.EncodeFields((MobileAndroid)value, writer);
                    return;
                }
                if (value is Api)
                {
                    WriteProperty(".tag", "api", writer, enc.StringEncoder.Instance);
                    Api.Encoder.EncodeFields((Api)value, writer);
                    return;
                }
                if (value is Unknown)
                {
                    WriteProperty(".tag", "unknown", writer, enc.StringEncoder.Instance);
                    Unknown.Encoder.EncodeFields((Unknown)value, writer);
                    return;
                }
                if (value is Mobile)
                {
                    WriteProperty(".tag", "mobile", writer, enc.StringEncoder.Instance);
                    Mobile.Encoder.EncodeFields((Mobile)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="PlatformType" />.</para>
        /// </summary>
        private class PlatformTypeDecoder : enc.UnionDecoder<PlatformType>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="PlatformType" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override PlatformType Create()
            {
                return new PlatformType();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override PlatformType Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "web":
                        return Web.Decoder.DecodeFields(reader);
                    case "desktop":
                        return Desktop.Decoder.DecodeFields(reader);
                    case "mobile_ios":
                        return MobileIos.Decoder.DecodeFields(reader);
                    case "mobile_android":
                        return MobileAndroid.Decoder.DecodeFields(reader);
                    case "api":
                        return Api.Decoder.DecodeFields(reader);
                    case "unknown":
                        return Unknown.Decoder.DecodeFields(reader);
                    case "mobile":
                        return Mobile.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The content was viewed on the web.</para>
        /// </summary>
        public sealed class Web : PlatformType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Web> Encoder = new WebEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Web> Decoder = new WebDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Web" /> class.</para>
            /// </summary>
            private Web()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Web</para>
            /// </summary>
            public static readonly Web Instance = new Web();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Web" />.</para>
            /// </summary>
            private class WebEncoder : enc.StructEncoder<Web>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Web value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Web" />.</para>
            /// </summary>
            private class WebDecoder : enc.StructDecoder<Web>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Web" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Web Create()
                {
                    return Web.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The content was viewed on a desktop client.</para>
        /// </summary>
        public sealed class Desktop : PlatformType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Desktop> Encoder = new DesktopEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Desktop> Decoder = new DesktopDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Desktop" /> class.</para>
            /// </summary>
            private Desktop()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Desktop</para>
            /// </summary>
            public static readonly Desktop Instance = new Desktop();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Desktop" />.</para>
            /// </summary>
            private class DesktopEncoder : enc.StructEncoder<Desktop>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Desktop value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Desktop" />.</para>
            /// </summary>
            private class DesktopDecoder : enc.StructDecoder<Desktop>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Desktop" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Desktop Create()
                {
                    return Desktop.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The content was viewed on a mobile iOS client.</para>
        /// </summary>
        public sealed class MobileIos : PlatformType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<MobileIos> Encoder = new MobileIosEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<MobileIos> Decoder = new MobileIosDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="MobileIos" /> class.</para>
            /// </summary>
            private MobileIos()
            {
            }

            /// <summary>
            /// <para>A singleton instance of MobileIos</para>
            /// </summary>
            public static readonly MobileIos Instance = new MobileIos();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="MobileIos" />.</para>
            /// </summary>
            private class MobileIosEncoder : enc.StructEncoder<MobileIos>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(MobileIos value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="MobileIos" />.</para>
            /// </summary>
            private class MobileIosDecoder : enc.StructDecoder<MobileIos>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="MobileIos" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override MobileIos Create()
                {
                    return MobileIos.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The content was viewed on a mobile android client.</para>
        /// </summary>
        public sealed class MobileAndroid : PlatformType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<MobileAndroid> Encoder = new MobileAndroidEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<MobileAndroid> Decoder = new MobileAndroidDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="MobileAndroid" />
            /// class.</para>
            /// </summary>
            private MobileAndroid()
            {
            }

            /// <summary>
            /// <para>A singleton instance of MobileAndroid</para>
            /// </summary>
            public static readonly MobileAndroid Instance = new MobileAndroid();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="MobileAndroid" />.</para>
            /// </summary>
            private class MobileAndroidEncoder : enc.StructEncoder<MobileAndroid>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(MobileAndroid value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="MobileAndroid" />.</para>
            /// </summary>
            private class MobileAndroidDecoder : enc.StructDecoder<MobileAndroid>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="MobileAndroid" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override MobileAndroid Create()
                {
                    return MobileAndroid.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The content was viewed from an API client.</para>
        /// </summary>
        public sealed class Api : PlatformType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Api> Encoder = new ApiEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Api> Decoder = new ApiDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Api" /> class.</para>
            /// </summary>
            private Api()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Api</para>
            /// </summary>
            public static readonly Api Instance = new Api();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Api" />.</para>
            /// </summary>
            private class ApiEncoder : enc.StructEncoder<Api>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Api value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Api" />.</para>
            /// </summary>
            private class ApiDecoder : enc.StructDecoder<Api>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Api" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Api Create()
                {
                    return Api.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The content was viewed on an unknown platform.</para>
        /// </summary>
        public sealed class Unknown : PlatformType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Unknown> Encoder = new UnknownEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Unknown> Decoder = new UnknownDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Unknown" /> class.</para>
            /// </summary>
            private Unknown()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Unknown</para>
            /// </summary>
            public static readonly Unknown Instance = new Unknown();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Unknown" />.</para>
            /// </summary>
            private class UnknownEncoder : enc.StructEncoder<Unknown>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Unknown value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Unknown" />.</para>
            /// </summary>
            private class UnknownDecoder : enc.StructDecoder<Unknown>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Unknown" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Unknown Create()
                {
                    return Unknown.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The content was viewed on a mobile client. DEPRECATED: Use mobile_ios or
        /// mobile_android instead.</para>
        /// </summary>
        public sealed class Mobile : PlatformType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Mobile> Encoder = new MobileEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Mobile> Decoder = new MobileDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Mobile" /> class.</para>
            /// </summary>
            private Mobile()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Mobile</para>
            /// </summary>
            public static readonly Mobile Instance = new Mobile();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Mobile" />.</para>
            /// </summary>
            private class MobileEncoder : enc.StructEncoder<Mobile>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Mobile value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Mobile" />.</para>
            /// </summary>
            private class MobileDecoder : enc.StructDecoder<Mobile>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Mobile" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Mobile Create()
                {
                    return Mobile.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : PlatformType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}

// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.TeamPolicies
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The two step verification policy object</para>
    /// </summary>
    public class TwoStepVerificationPolicy
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<TwoStepVerificationPolicy> Encoder = new TwoStepVerificationPolicyEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<TwoStepVerificationPolicy> Decoder = new TwoStepVerificationPolicyDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="TwoStepVerificationPolicy" />
        /// class.</para>
        /// </summary>
        public TwoStepVerificationPolicy()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is RequireTfaEnable</para>
        /// </summary>
        public bool IsRequireTfaEnable
        {
            get
            {
                return this is RequireTfaEnable;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a RequireTfaEnable, or <c>null</c>.</para>
        /// </summary>
        public RequireTfaEnable AsRequireTfaEnable
        {
            get
            {
                return this as RequireTfaEnable;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is RequireTfaDisable</para>
        /// </summary>
        public bool IsRequireTfaDisable
        {
            get
            {
                return this is RequireTfaDisable;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a RequireTfaDisable, or <c>null</c>.</para>
        /// </summary>
        public RequireTfaDisable AsRequireTfaDisable
        {
            get
            {
                return this as RequireTfaDisable;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="TwoStepVerificationPolicy" />.</para>
        /// </summary>
        private class TwoStepVerificationPolicyEncoder : enc.StructEncoder<TwoStepVerificationPolicy>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(TwoStepVerificationPolicy value, enc.IJsonWriter writer)
            {
                if (value is RequireTfaEnable)
                {
                    WriteProperty(".tag", "require_tfa_enable", writer, enc.StringEncoder.Instance);
                    RequireTfaEnable.Encoder.EncodeFields((RequireTfaEnable)value, writer);
                    return;
                }
                if (value is RequireTfaDisable)
                {
                    WriteProperty(".tag", "require_tfa_disable", writer, enc.StringEncoder.Instance);
                    RequireTfaDisable.Encoder.EncodeFields((RequireTfaDisable)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="TwoStepVerificationPolicy" />.</para>
        /// </summary>
        private class TwoStepVerificationPolicyDecoder : enc.UnionDecoder<TwoStepVerificationPolicy>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="TwoStepVerificationPolicy"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override TwoStepVerificationPolicy Create()
            {
                return new TwoStepVerificationPolicy();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override TwoStepVerificationPolicy Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "require_tfa_enable":
                        return RequireTfaEnable.Decoder.DecodeFields(reader);
                    case "require_tfa_disable":
                        return RequireTfaDisable.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>Enabled require two factor authorization.</para>
        /// </summary>
        public sealed class RequireTfaEnable : TwoStepVerificationPolicy
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<RequireTfaEnable> Encoder = new RequireTfaEnableEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<RequireTfaEnable> Decoder = new RequireTfaEnableDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="RequireTfaEnable" />
            /// class.</para>
            /// </summary>
            private RequireTfaEnable()
            {
            }

            /// <summary>
            /// <para>A singleton instance of RequireTfaEnable</para>
            /// </summary>
            public static readonly RequireTfaEnable Instance = new RequireTfaEnable();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="RequireTfaEnable" />.</para>
            /// </summary>
            private class RequireTfaEnableEncoder : enc.StructEncoder<RequireTfaEnable>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(RequireTfaEnable value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="RequireTfaEnable" />.</para>
            /// </summary>
            private class RequireTfaEnableDecoder : enc.StructDecoder<RequireTfaEnable>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="RequireTfaEnable" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override RequireTfaEnable Create()
                {
                    return RequireTfaEnable.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Disabled require two factor authorization.</para>
        /// </summary>
        public sealed class RequireTfaDisable : TwoStepVerificationPolicy
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<RequireTfaDisable> Encoder = new RequireTfaDisableEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<RequireTfaDisable> Decoder = new RequireTfaDisableDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="RequireTfaDisable" />
            /// class.</para>
            /// </summary>
            private RequireTfaDisable()
            {
            }

            /// <summary>
            /// <para>A singleton instance of RequireTfaDisable</para>
            /// </summary>
            public static readonly RequireTfaDisable Instance = new RequireTfaDisable();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="RequireTfaDisable" />.</para>
            /// </summary>
            private class RequireTfaDisableEncoder : enc.StructEncoder<RequireTfaDisable>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(RequireTfaDisable value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="RequireTfaDisable" />.</para>
            /// </summary>
            private class RequireTfaDisableDecoder : enc.StructDecoder<RequireTfaDisable>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="RequireTfaDisable"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override RequireTfaDisable Create()
                {
                    return RequireTfaDisable.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : TwoStepVerificationPolicy
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}

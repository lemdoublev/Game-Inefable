// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.TeamLog
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Transferred ownership of shared folder to another member.</para>
    /// </summary>
    public class SharedFolderTransferOwnershipDetails
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<SharedFolderTransferOwnershipDetails> Encoder = new SharedFolderTransferOwnershipDetailsEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<SharedFolderTransferOwnershipDetails> Decoder = new SharedFolderTransferOwnershipDetailsDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see
        /// cref="SharedFolderTransferOwnershipDetails" /> class.</para>
        /// </summary>
        /// <param name="newOwnerEmail">The email address of the new shared folder
        /// owner.</param>
        /// <param name="previousOwnerEmail">The email address of the previous shared folder
        /// owner.</param>
        public SharedFolderTransferOwnershipDetails(string newOwnerEmail,
                                                    string previousOwnerEmail = null)
        {
            if (newOwnerEmail == null)
            {
                throw new sys.ArgumentNullException("newOwnerEmail");
            }
            if (newOwnerEmail.Length > 255)
            {
                throw new sys.ArgumentOutOfRangeException("newOwnerEmail", "Length should be at most 255");
            }

            if (previousOwnerEmail != null)
            {
                if (previousOwnerEmail.Length > 255)
                {
                    throw new sys.ArgumentOutOfRangeException("previousOwnerEmail", "Length should be at most 255");
                }
            }

            this.NewOwnerEmail = newOwnerEmail;
            this.PreviousOwnerEmail = previousOwnerEmail;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see
        /// cref="SharedFolderTransferOwnershipDetails" /> class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public SharedFolderTransferOwnershipDetails()
        {
        }

        /// <summary>
        /// <para>The email address of the new shared folder owner.</para>
        /// </summary>
        public string NewOwnerEmail { get; protected set; }

        /// <summary>
        /// <para>The email address of the previous shared folder owner.</para>
        /// </summary>
        public string PreviousOwnerEmail { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="SharedFolderTransferOwnershipDetails" />.</para>
        /// </summary>
        private class SharedFolderTransferOwnershipDetailsEncoder : enc.StructEncoder<SharedFolderTransferOwnershipDetails>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(SharedFolderTransferOwnershipDetails value, enc.IJsonWriter writer)
            {
                WriteProperty("new_owner_email", value.NewOwnerEmail, writer, enc.StringEncoder.Instance);
                if (value.PreviousOwnerEmail != null)
                {
                    WriteProperty("previous_owner_email", value.PreviousOwnerEmail, writer, enc.StringEncoder.Instance);
                }
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="SharedFolderTransferOwnershipDetails" />.</para>
        /// </summary>
        private class SharedFolderTransferOwnershipDetailsDecoder : enc.StructDecoder<SharedFolderTransferOwnershipDetails>
        {
            /// <summary>
            /// <para>Create a new instance of type <see
            /// cref="SharedFolderTransferOwnershipDetails" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override SharedFolderTransferOwnershipDetails Create()
            {
                return new SharedFolderTransferOwnershipDetails();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(SharedFolderTransferOwnershipDetails value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "new_owner_email":
                        value.NewOwnerEmail = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "previous_owner_email":
                        value.PreviousOwnerEmail = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}

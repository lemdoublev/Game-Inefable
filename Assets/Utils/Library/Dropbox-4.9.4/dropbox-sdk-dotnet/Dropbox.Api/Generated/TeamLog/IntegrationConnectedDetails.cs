// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.TeamLog
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Connected integration for member.</para>
    /// </summary>
    public class IntegrationConnectedDetails
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<IntegrationConnectedDetails> Encoder = new IntegrationConnectedDetailsEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<IntegrationConnectedDetails> Decoder = new IntegrationConnectedDetailsDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="IntegrationConnectedDetails" />
        /// class.</para>
        /// </summary>
        /// <param name="integrationName">Name of the third-party integration.</param>
        public IntegrationConnectedDetails(string integrationName)
        {
            if (integrationName == null)
            {
                throw new sys.ArgumentNullException("integrationName");
            }

            this.IntegrationName = integrationName;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="IntegrationConnectedDetails" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public IntegrationConnectedDetails()
        {
        }

        /// <summary>
        /// <para>Name of the third-party integration.</para>
        /// </summary>
        public string IntegrationName { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="IntegrationConnectedDetails" />.</para>
        /// </summary>
        private class IntegrationConnectedDetailsEncoder : enc.StructEncoder<IntegrationConnectedDetails>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(IntegrationConnectedDetails value, enc.IJsonWriter writer)
            {
                WriteProperty("integration_name", value.IntegrationName, writer, enc.StringEncoder.Instance);
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="IntegrationConnectedDetails" />.</para>
        /// </summary>
        private class IntegrationConnectedDetailsDecoder : enc.StructDecoder<IntegrationConnectedDetails>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="IntegrationConnectedDetails"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override IntegrationConnectedDetails Create()
            {
                return new IntegrationConnectedDetails();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(IntegrationConnectedDetails value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "integration_name":
                        value.IntegrationName = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}

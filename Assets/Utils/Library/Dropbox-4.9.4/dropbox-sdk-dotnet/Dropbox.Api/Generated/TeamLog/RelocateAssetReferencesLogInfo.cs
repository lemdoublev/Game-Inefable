// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.TeamLog
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Provides the indices of the source asset and the destination asset for a relocate
    /// action.</para>
    /// </summary>
    public class RelocateAssetReferencesLogInfo
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<RelocateAssetReferencesLogInfo> Encoder = new RelocateAssetReferencesLogInfoEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<RelocateAssetReferencesLogInfo> Decoder = new RelocateAssetReferencesLogInfoDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="RelocateAssetReferencesLogInfo"
        /// /> class.</para>
        /// </summary>
        /// <param name="srcAssetIndex">Source asset position in the Assets list.</param>
        /// <param name="destAssetIndex">Destination asset position in the Assets list.</param>
        public RelocateAssetReferencesLogInfo(ulong srcAssetIndex,
                                              ulong destAssetIndex)
        {
            this.SrcAssetIndex = srcAssetIndex;
            this.DestAssetIndex = destAssetIndex;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="RelocateAssetReferencesLogInfo"
        /// /> class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public RelocateAssetReferencesLogInfo()
        {
        }

        /// <summary>
        /// <para>Source asset position in the Assets list.</para>
        /// </summary>
        public ulong SrcAssetIndex { get; protected set; }

        /// <summary>
        /// <para>Destination asset position in the Assets list.</para>
        /// </summary>
        public ulong DestAssetIndex { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="RelocateAssetReferencesLogInfo" />.</para>
        /// </summary>
        private class RelocateAssetReferencesLogInfoEncoder : enc.StructEncoder<RelocateAssetReferencesLogInfo>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(RelocateAssetReferencesLogInfo value, enc.IJsonWriter writer)
            {
                WriteProperty("src_asset_index", value.SrcAssetIndex, writer, enc.UInt64Encoder.Instance);
                WriteProperty("dest_asset_index", value.DestAssetIndex, writer, enc.UInt64Encoder.Instance);
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="RelocateAssetReferencesLogInfo" />.</para>
        /// </summary>
        private class RelocateAssetReferencesLogInfoDecoder : enc.StructDecoder<RelocateAssetReferencesLogInfo>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="RelocateAssetReferencesLogInfo"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override RelocateAssetReferencesLogInfo Create()
            {
                return new RelocateAssetReferencesLogInfo();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(RelocateAssetReferencesLogInfo value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "src_asset_index":
                        value.SrcAssetIndex = enc.UInt64Decoder.Instance.Decode(reader);
                        break;
                    case "dest_asset_index":
                        value.DestAssetIndex = enc.UInt64Decoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}

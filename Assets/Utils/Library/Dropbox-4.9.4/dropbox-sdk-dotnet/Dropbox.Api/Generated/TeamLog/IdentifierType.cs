// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.TeamLog
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The identifier type object</para>
    /// </summary>
    public class IdentifierType
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<IdentifierType> Encoder = new IdentifierTypeEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<IdentifierType> Decoder = new IdentifierTypeDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="IdentifierType" /> class.</para>
        /// </summary>
        public IdentifierType()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Email</para>
        /// </summary>
        public bool IsEmail
        {
            get
            {
                return this is Email;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Email, or <c>null</c>.</para>
        /// </summary>
        public Email AsEmail
        {
            get
            {
                return this as Email;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is FacebookProfileName</para>
        /// </summary>
        public bool IsFacebookProfileName
        {
            get
            {
                return this is FacebookProfileName;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a FacebookProfileName, or <c>null</c>.</para>
        /// </summary>
        public FacebookProfileName AsFacebookProfileName
        {
            get
            {
                return this as FacebookProfileName;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="IdentifierType" />.</para>
        /// </summary>
        private class IdentifierTypeEncoder : enc.StructEncoder<IdentifierType>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(IdentifierType value, enc.IJsonWriter writer)
            {
                if (value is Email)
                {
                    WriteProperty(".tag", "email", writer, enc.StringEncoder.Instance);
                    Email.Encoder.EncodeFields((Email)value, writer);
                    return;
                }
                if (value is FacebookProfileName)
                {
                    WriteProperty(".tag", "facebook_profile_name", writer, enc.StringEncoder.Instance);
                    FacebookProfileName.Encoder.EncodeFields((FacebookProfileName)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="IdentifierType" />.</para>
        /// </summary>
        private class IdentifierTypeDecoder : enc.UnionDecoder<IdentifierType>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="IdentifierType" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override IdentifierType Create()
            {
                return new IdentifierType();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override IdentifierType Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "email":
                        return Email.Decoder.DecodeFields(reader);
                    case "facebook_profile_name":
                        return FacebookProfileName.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The email object</para>
        /// </summary>
        public sealed class Email : IdentifierType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Email> Encoder = new EmailEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Email> Decoder = new EmailDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Email" /> class.</para>
            /// </summary>
            private Email()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Email</para>
            /// </summary>
            public static readonly Email Instance = new Email();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Email" />.</para>
            /// </summary>
            private class EmailEncoder : enc.StructEncoder<Email>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Email value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Email" />.</para>
            /// </summary>
            private class EmailDecoder : enc.StructDecoder<Email>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Email" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Email Create()
                {
                    return Email.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The facebook profile name object</para>
        /// </summary>
        public sealed class FacebookProfileName : IdentifierType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<FacebookProfileName> Encoder = new FacebookProfileNameEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<FacebookProfileName> Decoder = new FacebookProfileNameDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="FacebookProfileName" />
            /// class.</para>
            /// </summary>
            private FacebookProfileName()
            {
            }

            /// <summary>
            /// <para>A singleton instance of FacebookProfileName</para>
            /// </summary>
            public static readonly FacebookProfileName Instance = new FacebookProfileName();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="FacebookProfileName" />.</para>
            /// </summary>
            private class FacebookProfileNameEncoder : enc.StructEncoder<FacebookProfileName>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(FacebookProfileName value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="FacebookProfileName" />.</para>
            /// </summary>
            private class FacebookProfileNameDecoder : enc.StructDecoder<FacebookProfileName>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="FacebookProfileName"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override FacebookProfileName Create()
                {
                    return FacebookProfileName.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : IdentifierType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}

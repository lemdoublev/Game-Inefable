// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.FileRequests
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The file request deadline object</para>
    /// </summary>
    public class FileRequestDeadline
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<FileRequestDeadline> Encoder = new FileRequestDeadlineEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<FileRequestDeadline> Decoder = new FileRequestDeadlineDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="FileRequestDeadline" />
        /// class.</para>
        /// </summary>
        /// <param name="deadline">The deadline for this file request.</param>
        /// <param name="allowLateUploads">If set, allow uploads after the deadline has passed.
        /// These     uploads will be marked overdue.</param>
        public FileRequestDeadline(sys.DateTime deadline,
                                   GracePeriod allowLateUploads = null)
        {
            this.Deadline = deadline;
            this.AllowLateUploads = allowLateUploads;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="FileRequestDeadline" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public FileRequestDeadline()
        {
        }

        /// <summary>
        /// <para>The deadline for this file request.</para>
        /// </summary>
        public sys.DateTime Deadline { get; protected set; }

        /// <summary>
        /// <para>If set, allow uploads after the deadline has passed. These     uploads will
        /// be marked overdue.</para>
        /// </summary>
        public GracePeriod AllowLateUploads { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="FileRequestDeadline" />.</para>
        /// </summary>
        private class FileRequestDeadlineEncoder : enc.StructEncoder<FileRequestDeadline>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(FileRequestDeadline value, enc.IJsonWriter writer)
            {
                WriteProperty("deadline", value.Deadline, writer, enc.DateTimeEncoder.Instance);
                if (value.AllowLateUploads != null)
                {
                    WriteProperty("allow_late_uploads", value.AllowLateUploads, writer, global::Dropbox.Api.FileRequests.GracePeriod.Encoder);
                }
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="FileRequestDeadline" />.</para>
        /// </summary>
        private class FileRequestDeadlineDecoder : enc.StructDecoder<FileRequestDeadline>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="FileRequestDeadline" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override FileRequestDeadline Create()
            {
                return new FileRequestDeadline();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(FileRequestDeadline value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "deadline":
                        value.Deadline = enc.DateTimeDecoder.Instance.Decode(reader);
                        break;
                    case "allow_late_uploads":
                        value.AllowLateUploads = global::Dropbox.Api.FileRequests.GracePeriod.Decoder.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}

// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Paper
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The list paper docs sort by object</para>
    /// </summary>
    public class ListPaperDocsSortBy
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<ListPaperDocsSortBy> Encoder = new ListPaperDocsSortByEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<ListPaperDocsSortBy> Decoder = new ListPaperDocsSortByDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="ListPaperDocsSortBy" />
        /// class.</para>
        /// </summary>
        public ListPaperDocsSortBy()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Accessed</para>
        /// </summary>
        public bool IsAccessed
        {
            get
            {
                return this is Accessed;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Accessed, or <c>null</c>.</para>
        /// </summary>
        public Accessed AsAccessed
        {
            get
            {
                return this as Accessed;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Modified</para>
        /// </summary>
        public bool IsModified
        {
            get
            {
                return this is Modified;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Modified, or <c>null</c>.</para>
        /// </summary>
        public Modified AsModified
        {
            get
            {
                return this as Modified;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Created</para>
        /// </summary>
        public bool IsCreated
        {
            get
            {
                return this is Created;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Created, or <c>null</c>.</para>
        /// </summary>
        public Created AsCreated
        {
            get
            {
                return this as Created;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="ListPaperDocsSortBy" />.</para>
        /// </summary>
        private class ListPaperDocsSortByEncoder : enc.StructEncoder<ListPaperDocsSortBy>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(ListPaperDocsSortBy value, enc.IJsonWriter writer)
            {
                if (value is Accessed)
                {
                    WriteProperty(".tag", "accessed", writer, enc.StringEncoder.Instance);
                    Accessed.Encoder.EncodeFields((Accessed)value, writer);
                    return;
                }
                if (value is Modified)
                {
                    WriteProperty(".tag", "modified", writer, enc.StringEncoder.Instance);
                    Modified.Encoder.EncodeFields((Modified)value, writer);
                    return;
                }
                if (value is Created)
                {
                    WriteProperty(".tag", "created", writer, enc.StringEncoder.Instance);
                    Created.Encoder.EncodeFields((Created)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="ListPaperDocsSortBy" />.</para>
        /// </summary>
        private class ListPaperDocsSortByDecoder : enc.UnionDecoder<ListPaperDocsSortBy>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="ListPaperDocsSortBy" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override ListPaperDocsSortBy Create()
            {
                return new ListPaperDocsSortBy();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override ListPaperDocsSortBy Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "accessed":
                        return Accessed.Decoder.DecodeFields(reader);
                    case "modified":
                        return Modified.Decoder.DecodeFields(reader);
                    case "created":
                        return Created.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>Sorts the Paper docs by the time they were last accessed.</para>
        /// </summary>
        public sealed class Accessed : ListPaperDocsSortBy
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Accessed> Encoder = new AccessedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Accessed> Decoder = new AccessedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Accessed" /> class.</para>
            /// </summary>
            private Accessed()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Accessed</para>
            /// </summary>
            public static readonly Accessed Instance = new Accessed();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Accessed" />.</para>
            /// </summary>
            private class AccessedEncoder : enc.StructEncoder<Accessed>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Accessed value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Accessed" />.</para>
            /// </summary>
            private class AccessedDecoder : enc.StructDecoder<Accessed>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Accessed" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Accessed Create()
                {
                    return Accessed.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Sorts the Paper docs by the time they were last modified.</para>
        /// </summary>
        public sealed class Modified : ListPaperDocsSortBy
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Modified> Encoder = new ModifiedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Modified> Decoder = new ModifiedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Modified" /> class.</para>
            /// </summary>
            private Modified()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Modified</para>
            /// </summary>
            public static readonly Modified Instance = new Modified();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Modified" />.</para>
            /// </summary>
            private class ModifiedEncoder : enc.StructEncoder<Modified>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Modified value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Modified" />.</para>
            /// </summary>
            private class ModifiedDecoder : enc.StructDecoder<Modified>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Modified" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Modified Create()
                {
                    return Modified.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Sorts the Paper docs by the creation time.</para>
        /// </summary>
        public sealed class Created : ListPaperDocsSortBy
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Created> Encoder = new CreatedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Created> Decoder = new CreatedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Created" /> class.</para>
            /// </summary>
            private Created()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Created</para>
            /// </summary>
            public static readonly Created Instance = new Created();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Created" />.</para>
            /// </summary>
            private class CreatedEncoder : enc.StructEncoder<Created>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Created value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Created" />.</para>
            /// </summary>
            private class CreatedDecoder : enc.StructDecoder<Created>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Created" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Created Create()
                {
                    return Created.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : ListPaperDocsSortBy
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}

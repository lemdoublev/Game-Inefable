// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Team
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Result for <see cref="Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListAsync"
    /// />.</para>
    /// </summary>
    public class TeamNamespacesListResult
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<TeamNamespacesListResult> Encoder = new TeamNamespacesListResultEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<TeamNamespacesListResult> Decoder = new TeamNamespacesListResultDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="TeamNamespacesListResult" />
        /// class.</para>
        /// </summary>
        /// <param name="namespaces">List of all namespaces the team can access.</param>
        /// <param name="cursor">Pass the cursor into <see
        /// cref="Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListContinueAsync" /> to
        /// obtain additional namespaces. Note that duplicate namespaces may be
        /// returned.</param>
        /// <param name="hasMore">Is true if there are additional namespaces that have not been
        /// returned yet.</param>
        public TeamNamespacesListResult(col.IEnumerable<NamespaceMetadata> namespaces,
                                        string cursor,
                                        bool hasMore)
        {
            var namespacesList = enc.Util.ToList(namespaces);

            if (namespaces == null)
            {
                throw new sys.ArgumentNullException("namespaces");
            }

            if (cursor == null)
            {
                throw new sys.ArgumentNullException("cursor");
            }

            this.Namespaces = namespacesList;
            this.Cursor = cursor;
            this.HasMore = hasMore;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="TeamNamespacesListResult" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public TeamNamespacesListResult()
        {
        }

        /// <summary>
        /// <para>List of all namespaces the team can access.</para>
        /// </summary>
        public col.IList<NamespaceMetadata> Namespaces { get; protected set; }

        /// <summary>
        /// <para>Pass the cursor into <see
        /// cref="Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListContinueAsync" /> to
        /// obtain additional namespaces. Note that duplicate namespaces may be
        /// returned.</para>
        /// </summary>
        public string Cursor { get; protected set; }

        /// <summary>
        /// <para>Is true if there are additional namespaces that have not been returned
        /// yet.</para>
        /// </summary>
        public bool HasMore { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="TeamNamespacesListResult" />.</para>
        /// </summary>
        private class TeamNamespacesListResultEncoder : enc.StructEncoder<TeamNamespacesListResult>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(TeamNamespacesListResult value, enc.IJsonWriter writer)
            {
                WriteListProperty("namespaces", value.Namespaces, writer, global::Dropbox.Api.Team.NamespaceMetadata.Encoder);
                WriteProperty("cursor", value.Cursor, writer, enc.StringEncoder.Instance);
                WriteProperty("has_more", value.HasMore, writer, enc.BooleanEncoder.Instance);
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="TeamNamespacesListResult" />.</para>
        /// </summary>
        private class TeamNamespacesListResultDecoder : enc.StructDecoder<TeamNamespacesListResult>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="TeamNamespacesListResult"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override TeamNamespacesListResult Create()
            {
                return new TeamNamespacesListResult();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(TeamNamespacesListResult value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "namespaces":
                        value.Namespaces = ReadList<NamespaceMetadata>(reader, global::Dropbox.Api.Team.NamespaceMetadata.Decoder);
                        break;
                    case "cursor":
                        value.Cursor = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "has_more":
                        value.HasMore = enc.BooleanDecoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}

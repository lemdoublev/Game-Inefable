// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Team
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Error returned when setting member custom quota.</para>
    /// </summary>
    public class SetCustomQuotaError
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<SetCustomQuotaError> Encoder = new SetCustomQuotaErrorEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<SetCustomQuotaError> Decoder = new SetCustomQuotaErrorDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="SetCustomQuotaError" />
        /// class.</para>
        /// </summary>
        public SetCustomQuotaError()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is SomeUsersAreExcluded</para>
        /// </summary>
        public bool IsSomeUsersAreExcluded
        {
            get
            {
                return this is SomeUsersAreExcluded;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a SomeUsersAreExcluded, or <c>null</c>.</para>
        /// </summary>
        public SomeUsersAreExcluded AsSomeUsersAreExcluded
        {
            get
            {
                return this as SomeUsersAreExcluded;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is TooManyUsers</para>
        /// </summary>
        public bool IsTooManyUsers
        {
            get
            {
                return this is TooManyUsers;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TooManyUsers, or <c>null</c>.</para>
        /// </summary>
        public TooManyUsers AsTooManyUsers
        {
            get
            {
                return this as TooManyUsers;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="SetCustomQuotaError" />.</para>
        /// </summary>
        private class SetCustomQuotaErrorEncoder : enc.StructEncoder<SetCustomQuotaError>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(SetCustomQuotaError value, enc.IJsonWriter writer)
            {
                if (value is SomeUsersAreExcluded)
                {
                    WriteProperty(".tag", "some_users_are_excluded", writer, enc.StringEncoder.Instance);
                    SomeUsersAreExcluded.Encoder.EncodeFields((SomeUsersAreExcluded)value, writer);
                    return;
                }
                if (value is TooManyUsers)
                {
                    WriteProperty(".tag", "too_many_users", writer, enc.StringEncoder.Instance);
                    TooManyUsers.Encoder.EncodeFields((TooManyUsers)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="SetCustomQuotaError" />.</para>
        /// </summary>
        private class SetCustomQuotaErrorDecoder : enc.UnionDecoder<SetCustomQuotaError>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="SetCustomQuotaError" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override SetCustomQuotaError Create()
            {
                return new SetCustomQuotaError();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override SetCustomQuotaError Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "some_users_are_excluded":
                        return SomeUsersAreExcluded.Decoder.DecodeFields(reader);
                    case "too_many_users":
                        return TooManyUsers.Decoder.DecodeFields(reader);
                    case "other":
                        return Other.Decoder.DecodeFields(reader);
                    default:
                        throw new sys.InvalidOperationException();
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>Some of the users are on the excluded users list and can't have custom quota
        /// set.</para>
        /// </summary>
        public sealed class SomeUsersAreExcluded : SetCustomQuotaError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<SomeUsersAreExcluded> Encoder = new SomeUsersAreExcludedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<SomeUsersAreExcluded> Decoder = new SomeUsersAreExcludedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="SomeUsersAreExcluded" />
            /// class.</para>
            /// </summary>
            private SomeUsersAreExcluded()
            {
            }

            /// <summary>
            /// <para>A singleton instance of SomeUsersAreExcluded</para>
            /// </summary>
            public static readonly SomeUsersAreExcluded Instance = new SomeUsersAreExcluded();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="SomeUsersAreExcluded" />.</para>
            /// </summary>
            private class SomeUsersAreExcludedEncoder : enc.StructEncoder<SomeUsersAreExcluded>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(SomeUsersAreExcluded value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="SomeUsersAreExcluded" />.</para>
            /// </summary>
            private class SomeUsersAreExcludedDecoder : enc.StructDecoder<SomeUsersAreExcluded>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="SomeUsersAreExcluded"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override SomeUsersAreExcluded Create()
                {
                    return SomeUsersAreExcluded.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>A maximum of 1000 users can be set for a single call.</para>
        /// </summary>
        public sealed class TooManyUsers : SetCustomQuotaError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TooManyUsers> Encoder = new TooManyUsersEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TooManyUsers> Decoder = new TooManyUsersDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TooManyUsers" />
            /// class.</para>
            /// </summary>
            private TooManyUsers()
            {
            }

            /// <summary>
            /// <para>A singleton instance of TooManyUsers</para>
            /// </summary>
            public static readonly TooManyUsers Instance = new TooManyUsers();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TooManyUsers" />.</para>
            /// </summary>
            private class TooManyUsersEncoder : enc.StructEncoder<TooManyUsers>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TooManyUsers value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TooManyUsers" />.</para>
            /// </summary>
            private class TooManyUsersDecoder : enc.StructDecoder<TooManyUsers>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="TooManyUsers" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TooManyUsers Create()
                {
                    return TooManyUsers.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : SetCustomQuotaError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}

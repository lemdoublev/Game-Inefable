// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Files
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The thumbnail mode object</para>
    /// </summary>
    public class ThumbnailMode
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<ThumbnailMode> Encoder = new ThumbnailModeEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<ThumbnailMode> Decoder = new ThumbnailModeDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="ThumbnailMode" /> class.</para>
        /// </summary>
        public ThumbnailMode()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Strict</para>
        /// </summary>
        public bool IsStrict
        {
            get
            {
                return this is Strict;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Strict, or <c>null</c>.</para>
        /// </summary>
        public Strict AsStrict
        {
            get
            {
                return this as Strict;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Bestfit</para>
        /// </summary>
        public bool IsBestfit
        {
            get
            {
                return this is Bestfit;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Bestfit, or <c>null</c>.</para>
        /// </summary>
        public Bestfit AsBestfit
        {
            get
            {
                return this as Bestfit;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is FitoneBestfit</para>
        /// </summary>
        public bool IsFitoneBestfit
        {
            get
            {
                return this is FitoneBestfit;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a FitoneBestfit, or <c>null</c>.</para>
        /// </summary>
        public FitoneBestfit AsFitoneBestfit
        {
            get
            {
                return this as FitoneBestfit;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="ThumbnailMode" />.</para>
        /// </summary>
        private class ThumbnailModeEncoder : enc.StructEncoder<ThumbnailMode>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(ThumbnailMode value, enc.IJsonWriter writer)
            {
                if (value is Strict)
                {
                    WriteProperty(".tag", "strict", writer, enc.StringEncoder.Instance);
                    Strict.Encoder.EncodeFields((Strict)value, writer);
                    return;
                }
                if (value is Bestfit)
                {
                    WriteProperty(".tag", "bestfit", writer, enc.StringEncoder.Instance);
                    Bestfit.Encoder.EncodeFields((Bestfit)value, writer);
                    return;
                }
                if (value is FitoneBestfit)
                {
                    WriteProperty(".tag", "fitone_bestfit", writer, enc.StringEncoder.Instance);
                    FitoneBestfit.Encoder.EncodeFields((FitoneBestfit)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="ThumbnailMode" />.</para>
        /// </summary>
        private class ThumbnailModeDecoder : enc.UnionDecoder<ThumbnailMode>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="ThumbnailMode" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override ThumbnailMode Create()
            {
                return new ThumbnailMode();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override ThumbnailMode Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "strict":
                        return Strict.Decoder.DecodeFields(reader);
                    case "bestfit":
                        return Bestfit.Decoder.DecodeFields(reader);
                    case "fitone_bestfit":
                        return FitoneBestfit.Decoder.DecodeFields(reader);
                    default:
                        throw new sys.InvalidOperationException();
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>Scale down the image to fit within the given size.</para>
        /// </summary>
        public sealed class Strict : ThumbnailMode
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Strict> Encoder = new StrictEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Strict> Decoder = new StrictDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Strict" /> class.</para>
            /// </summary>
            private Strict()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Strict</para>
            /// </summary>
            public static readonly Strict Instance = new Strict();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Strict" />.</para>
            /// </summary>
            private class StrictEncoder : enc.StructEncoder<Strict>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Strict value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Strict" />.</para>
            /// </summary>
            private class StrictDecoder : enc.StructDecoder<Strict>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Strict" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Strict Create()
                {
                    return Strict.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Scale down the image to fit within the given size or its transpose.</para>
        /// </summary>
        public sealed class Bestfit : ThumbnailMode
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Bestfit> Encoder = new BestfitEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Bestfit> Decoder = new BestfitDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Bestfit" /> class.</para>
            /// </summary>
            private Bestfit()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Bestfit</para>
            /// </summary>
            public static readonly Bestfit Instance = new Bestfit();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Bestfit" />.</para>
            /// </summary>
            private class BestfitEncoder : enc.StructEncoder<Bestfit>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Bestfit value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Bestfit" />.</para>
            /// </summary>
            private class BestfitDecoder : enc.StructDecoder<Bestfit>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Bestfit" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Bestfit Create()
                {
                    return Bestfit.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Scale down the image to completely cover the given size or its
        /// transpose.</para>
        /// </summary>
        public sealed class FitoneBestfit : ThumbnailMode
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<FitoneBestfit> Encoder = new FitoneBestfitEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<FitoneBestfit> Decoder = new FitoneBestfitDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="FitoneBestfit" />
            /// class.</para>
            /// </summary>
            private FitoneBestfit()
            {
            }

            /// <summary>
            /// <para>A singleton instance of FitoneBestfit</para>
            /// </summary>
            public static readonly FitoneBestfit Instance = new FitoneBestfit();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="FitoneBestfit" />.</para>
            /// </summary>
            private class FitoneBestfitEncoder : enc.StructEncoder<FitoneBestfit>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(FitoneBestfit value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="FitoneBestfit" />.</para>
            /// </summary>
            private class FitoneBestfitDecoder : enc.StructDecoder<FitoneBestfit>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="FitoneBestfit" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override FitoneBestfit Create()
                {
                    return FitoneBestfit.Instance;
                }

            }

            #endregion
        }
    }
}

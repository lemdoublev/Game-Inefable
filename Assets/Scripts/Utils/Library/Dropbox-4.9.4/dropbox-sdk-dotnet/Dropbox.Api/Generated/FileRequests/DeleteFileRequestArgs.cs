// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.FileRequests
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Arguments for <see
    /// cref="Dropbox.Api.FileRequests.Routes.FileRequestsUserRoutes.DeleteAsync" />.</para>
    /// </summary>
    public class DeleteFileRequestArgs
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<DeleteFileRequestArgs> Encoder = new DeleteFileRequestArgsEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<DeleteFileRequestArgs> Decoder = new DeleteFileRequestArgsDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="DeleteFileRequestArgs" />
        /// class.</para>
        /// </summary>
        /// <param name="ids">List IDs of the file requests to delete.</param>
        public DeleteFileRequestArgs(col.IEnumerable<string> ids)
        {
            var idsList = enc.Util.ToList(ids);

            if (ids == null)
            {
                throw new sys.ArgumentNullException("ids");
            }

            this.Ids = idsList;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="DeleteFileRequestArgs" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public DeleteFileRequestArgs()
        {
        }

        /// <summary>
        /// <para>List IDs of the file requests to delete.</para>
        /// </summary>
        public col.IList<string> Ids { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="DeleteFileRequestArgs" />.</para>
        /// </summary>
        private class DeleteFileRequestArgsEncoder : enc.StructEncoder<DeleteFileRequestArgs>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(DeleteFileRequestArgs value, enc.IJsonWriter writer)
            {
                WriteListProperty("ids", value.Ids, writer, enc.StringEncoder.Instance);
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="DeleteFileRequestArgs" />.</para>
        /// </summary>
        private class DeleteFileRequestArgsDecoder : enc.StructDecoder<DeleteFileRequestArgs>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="DeleteFileRequestArgs"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override DeleteFileRequestArgs Create()
            {
                return new DeleteFileRequestArgs();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(DeleteFileRequestArgs value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "ids":
                        value.Ids = ReadList<string>(reader, enc.StringDecoder.Instance);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
